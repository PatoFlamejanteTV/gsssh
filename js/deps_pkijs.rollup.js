/*!
 Copyright (c) Peculiar Ventures, LLC
*/
function e(e,t,r){var s;return e instanceof Object==!1?r:null!==(s=e[t])&&void 0!==s?s:r}function t(e,t=0,r=e.byteLength-t,s=!1){let i="";for(const a of new Uint8Array(e,t,r)){const e=a.toString(16).toUpperCase();1===e.length&&(i+="0"),i+=e,s&&(i+=" ")}return i.trim()}function r(e,t,r,s){return t instanceof ArrayBuffer?t.byteLength?r<0?(e.error="Wrong parameter: inputOffset less than zero",!1):s<0?(e.error="Wrong parameter: inputLength less than zero",!1):!(t.byteLength-r-s<0)||(e.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):(e.error="Wrong parameter: inputBuffer has zero length",!1):(e.error='Wrong parameter: inputBuffer must be "ArrayBuffer"',!1)}function s(e,t){let r=0;if(1===e.length)return e[0];for(let s=e.length-1;s>=0;s--)r+=e[e.length-1-s]*Math.pow(2,t*s);return r}function i(e,t,r=-1){const s=r;let i=e,a=0,n=Math.pow(2,t);for(let r=1;r<8;r++){if(e<n){let e;if(s<0)e=new ArrayBuffer(r),a=r;else{if(s<r)return new ArrayBuffer(0);e=new ArrayBuffer(s),a=s}const n=new Uint8Array(e);for(let e=r-1;e>=0;e--){const r=Math.pow(2,e*t);n[a-e-1]=Math.floor(i/r),i-=n[a-e-1]*r}return e}n*=Math.pow(2,t)}return new ArrayBuffer(0)}function a(...e){let t=0,r=0;for(const r of e)t+=r.byteLength;const s=new ArrayBuffer(t),i=new Uint8Array(s);for(const t of e)i.set(new Uint8Array(t),r),r+=t.byteLength;return s}function n(...e){let t=0,r=0;for(const r of e)t+=r.length;const s=new ArrayBuffer(t),i=new Uint8Array(s);for(const t of e)i.set(t,r),r+=t.length;return i}function o(){const e=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){const t=255===e[0]&&128&e[1],r=0===e[0]&&!(128&e[1]);(t||r)&&this.warnings.push("Needlessly long format")}const t=new ArrayBuffer(this.valueHex.byteLength),r=new Uint8Array(t);for(let e=0;e<this.valueHex.byteLength;e++)r[e]=0;r[0]=128&e[0];const i=s(r,8),a=new ArrayBuffer(this.valueHex.byteLength),n=new Uint8Array(a);for(let t=0;t<this.valueHex.byteLength;t++)n[t]=e[t];n[0]&=127;return s(n,8)-i}function l(e,t){if(e.byteLength!==t.byteLength)return!1;const r=new Uint8Array(e),s=new Uint8Array(t);for(let e=0;e<r.length;e++)if(r[e]!==s[e])return!1;return!0}function c(e,t){const r=e.toString(10);if(t<r.length)return"";const s=t-r.length,i=new Array(s);for(let e=0;e<s;e++)i[e]="0";return i.join("").concat(r)}const h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=";function m(e,t=!1,r=!1,s=!1){let i=0,a=0,n=0,o="";const l=t?u:h;if(s){let t=0;for(let r=0;r<e.length;r++)if(0!==e.charCodeAt(r)){t=r;break}e=e.slice(t)}for(;i<e.length;){const t=e.charCodeAt(i++);i>=e.length&&(a=1);const s=e.charCodeAt(i++);i>=e.length&&(n=1);const c=e.charCodeAt(i++),h=t>>2,u=(3&t)<<4|s>>4;let m=(15&s)<<2|c>>6,f=63&c;1===a?m=f=64:1===n&&(f=64),o+=r?64===m?`${l.charAt(h)}${l.charAt(u)}`:64===f?`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}`:`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}${l.charAt(f)}`:`${l.charAt(h)}${l.charAt(u)}${l.charAt(m)}${l.charAt(f)}`}return o}function f(e,t=!1,r=!1){const s=t?u:h;function i(e){for(let t=0;t<64;t++)if(s.charAt(t)===e)return t;return 64}function a(e){return 64===e?0:e}let n=0,o="";for(;n<e.length;){const t=i(e.charAt(n++)),r=n>=e.length?0:i(e.charAt(n++)),s=n>=e.length?0:i(e.charAt(n++)),l=n>=e.length?0:i(e.charAt(n++)),c=a(t)<<2|a(r)>>4,h=(15&a(r))<<4|a(s)>>2,u=(3&a(s))<<6|a(l);o+=String.fromCharCode(c),64!==s&&(o+=String.fromCharCode(h)),64!==l&&(o+=String.fromCharCode(u))}if(r){let e=-1;for(let t=o.length-1;t>=0;t--)if(0!==o.charCodeAt(t)){e=t;break}o=-1!==e?o.slice(0,e+1):""}return o}function g(e){let t="";const r=new Uint8Array(e);for(const e of r)t+=String.fromCharCode(e);return t}function d(e){const t=e.length,r=new ArrayBuffer(t),s=new Uint8Array(r);for(let r=0;r<t;r++)s[r]=e.charCodeAt(r);return r}const p=Math.log(2);function y(e){const t=Math.log(e)/p,r=Math.floor(t),s=Math.round(t);return r===s?r:s}function b(e,t){for(const r of t)delete e[r]}function v(){if("undefined"==typeof BigInt)throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function w(e){if(e.idBlock.isConstructed)for(let t=0;t<e.valueBlock.value.length;t++)w(e.valueBlock.value[t])&&(e.lenBlock.isIndefiniteForm=!0);return!!e.lenBlock.isIndefiniteForm}function k(e){let t=0,r=0;for(let r=0;r<e.length;r++){t+=e[r].byteLength}const s=new ArrayBuffer(t),i=new Uint8Array(s);for(let t=0;t<e.length;t++){const s=e[t];i.set(new Uint8Array(s),r),r+=s.byteLength}return s}const A=[new Uint8Array([1])],B="0123456789",S="name",C="valueHex",N="isHexOnly",x="idBlock",P="tagClass",I="tagNumber",E="isConstructed",H="isIndefiniteForm",L="optional",O="primitiveSchema",U="value",V="valueDate",D="local",j="valueDec",R="",K=new ArrayBuffer(0);class _{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return k(this.items)}}class J{constructor(t={}){this.blockLength=e(t,"blockLength",0),this.error=e(t,"error",R),this.warnings=e(t,"warnings",[]),this.valueBeforeDecode="valueBeforeDecode"in t?t.valueBeforeDecode.slice(0):K}static blockName(){return"baseBlock"}toJSON(){return{blockName:this.constructor.blockName(),blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:t(this.valueBeforeDecode,0,this.valueBeforeDecode.byteLength)}}}const T=s=>class extends s{constructor(t={}){super(t),this.isHexOnly=e(t,N,!1),this.valueHex=C in t?t.valueHex.slice(0):K}static blockName(){return"hexBlock"}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;return 0===new Uint8Array(e,t,s).length?(this.warnings.push("Zero buffer length"),t):(this.valueHex=e.slice(t,t+s),this.blockLength=s,t+s)}toBER(e=!1){return!0!==this.isHexOnly?(this.error='Flag "isHexOnly" is not set, abort',K):!0===e?new ArrayBuffer(this.valueHex.byteLength):this.valueHex.slice(0)}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}};class F extends(T(J)){constructor(t={}){super(),x in t?(this.isHexOnly=e(t.idBlock,N,!1),this.valueHex=e(t.idBlock,C,K),this.tagClass=e(t.idBlock,P,-1),this.tagNumber=e(t.idBlock,I,-1),this.isConstructed=e(t.idBlock,E,!1)):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}static blockName(){return"identificationBlock"}toBER(e=!1){let t,r,s=0;switch(this.tagClass){case 1:s|=0;break;case 2:s|=64;break;case 3:s|=128;break;case 4:s|=192;break;default:return this.error="Unknown tag class",K}if(this.isConstructed&&(s|=32),this.tagNumber<31&&!this.isHexOnly){if(t=new ArrayBuffer(1),r=new Uint8Array(t),!e){let e=this.tagNumber;e&=31,s|=e,r[0]=s}return t}if(!1===this.isHexOnly){const a=i(this.tagNumber,7),n=new Uint8Array(a),o=a.byteLength;if(t=new ArrayBuffer(o+1),r=new Uint8Array(t),r[0]=31|s,!e){for(let e=0;e<o-1;e++)r[e+1]=128|n[e];r[o]=n[o-1]}return t}if(t=new ArrayBuffer(this.valueHex.byteLength+1),r=new Uint8Array(t),r[0]=31|s,!1===e){const e=new Uint8Array(this.valueHex);for(let t=0;t<e.length-1;t++)r[t+1]=128|e[t];r[this.valueHex.byteLength]=e[e.length-1]}return t}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const a=new Uint8Array(e,t,i);if(0===a.length)return this.error="Zero buffer length",-1;switch(192&a[0]){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=!(32&~a[0]),this.isHexOnly=!1;const n=31&a[0];if(31!==n)this.tagNumber=n,this.blockLength=1;else{let e=1;this.valueHex=new ArrayBuffer(255);let t=255,r=new Uint8Array(this.valueHex);for(;128&a[e];){if(r[e-1]=127&a[e],e++,e>=a.length)return this.error="End of input reached before message was fully decoded",-1;if(e===t){t+=255;const e=new ArrayBuffer(t),s=new Uint8Array(e);for(let e=0;e<r.length;e++)s[e]=r[e];this.valueHex=new ArrayBuffer(t),r=new Uint8Array(this.valueHex)}}this.blockLength=e+1,r[e-1]=127&a[e];const i=new ArrayBuffer(e),n=new Uint8Array(i);for(let t=0;t<e;t++)n[t]=r[t];this.valueHex=new ArrayBuffer(e),r=new Uint8Array(this.valueHex),r.set(n),this.blockLength<=9?this.tagNumber=s(r,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(1===this.tagClass&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.tagClass=this.tagClass,e.tagNumber=this.tagNumber,e.isConstructed=this.isConstructed,e}}class $ extends J{constructor(t={}){super(),"lenBlock"in t?(this.isIndefiniteForm=e(t.lenBlock,H,!1),this.longFormUsed=e(t.lenBlock,"longFormUsed",!1),this.length=e(t.lenBlock,"length",0)):(this.isIndefiniteForm=!1,this.longFormUsed=!1,this.length=0)}static blockName(){return"lengthBlock"}fromBER(e,t,i){if(!1===r(this,e,t,i))return-1;const a=new Uint8Array(e,t,i);if(0===a.length)return this.error="Zero buffer length",-1;if(255===a[0])return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=128===a[0],!0===this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(128&a[0]),!1===this.longFormUsed)return this.length=a[0],this.blockLength=1,t+this.blockLength;const n=127&a[0];if(n>8)return this.error="Too big integer",-1;if(n+1>a.length)return this.error="End of input reached before message was fully decoded",-1;const o=new Uint8Array(n);for(let e=0;e<n;e++)o[e]=a[e+1];return 0===o[n-1]&&this.warnings.push("Needlessly long encoded length"),this.length=s(o,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=n+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),!1===e&&(r=new Uint8Array(t),r[0]=128),t;if(!0===this.longFormUsed){const s=i(this.length,8);if(s.byteLength>127)return this.error="Too big length",K;if(t=new ArrayBuffer(s.byteLength+1),!0===e)return t;const a=new Uint8Array(s);r=new Uint8Array(t),r[0]=128|s.byteLength;for(let e=0;e<s.byteLength;e++)r[e+1]=a[e];return t}return t=new ArrayBuffer(1),!1===e&&(r=new Uint8Array(t),r[0]=this.length),t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isIndefiniteForm=this.isIndefiniteForm,e.longFormUsed=this.longFormUsed,e.length=this.length,e}}class M extends J{constructor(e={}){super(e)}static blockName(){return"valueBlock"}fromBER(e,t,r){throw TypeError('User need to make a specific function in a class which extends "ValueBlock"')}toBER(e=!1){throw TypeError('User need to make a specific function in a class which extends "ValueBlock"')}}class q extends J{constructor(e={},t=M){super(e),S in e&&(this.name=e.name),L in e&&(this.optional=e.optional),O in e&&(this.primitiveSchema=e.primitiveSchema),this.idBlock=new F(e),this.lenBlock=new $(e),this.valueBlock=new t(e)}static blockName(){return"BaseBlock"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}toBER(e=!1,t){const r=t||new _;t||w(this);const s=this.idBlock.toBER(e);if(r.write(s),this.lenBlock.isIndefiniteForm)r.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,r),r.write(new ArrayBuffer(2));else{const t=this.valueBlock.toBER(!0);this.lenBlock.length=t.byteLength;const s=this.lenBlock.toBER(e);r.write(s);const i=e?new ArrayBuffer(this.lenBlock.length):this.valueBlock.toBER(e);r.write(i,r)}if(!t)return r.final()}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.idBlock=this.idBlock.toJSON(),e.lenBlock=this.lenBlock.toJSON(),e.valueBlock=this.valueBlock.toJSON(),S in this&&(e.name=this.name),L in this&&(e.optional=this.optional),O in this&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(){return`${this.constructor.blockName()} : ${t(this.valueBlock.valueHex)}`}}class W extends M{constructor(t={}){super(t),this.valueHex=C in t?t.valueHex.slice(0):K,this.isHexOnly=e(t,N,!0)}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);if(0===i.length)return this.warnings.push("Zero buffer length"),t;this.valueHex=new ArrayBuffer(i.length);const a=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)a[e]=i[e];return this.blockLength=s,t+s}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"PrimitiveValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e.isHexOnly=this.isHexOnly,e}}class G extends q{constructor(e={}){super(e,W),this.idBlock.isConstructed=!1}static blockName(){return"PRIMITIVE"}}class Q extends M{constructor(t={}){super(t),this.value=e(t,U,[]),this.isIndefiniteForm=e(t,H,!1)}fromBER(e,t,s){const i=t,a=s;if(!1===r(this,e,t,s))return-1;if(0===new Uint8Array(e,t,s).length)return this.warnings.push("Zero buffer length"),t;let n=t;for(;o=this.isIndefiniteForm,l=s,(!0===o?1:l)>0;){const t=Me(e,n,s);if(-1===t.offset)return this.error=t.result.error,this.warnings.concat(t.result.warnings),-1;if(n=t.offset,this.blockLength+=t.result.blockLength,s-=t.result.blockLength,this.value.push(t.result),!0===this.isIndefiniteForm&&t.result.constructor.blockName()===Y.blockName())break}var o,l;return!0===this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.blockName()===Y.blockName()?this.value.pop():this.warnings.push("No EndOfContent block encoded")),this.valueBeforeDecode=e.slice(i,i+a),n}toBER(e=!1,t){const r=t||new _;for(let t=0;t<this.value.length;t++)this.value[t].toBER(e,r);if(!t)return r.final()}static blockName(){return"ConstructedValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.isIndefiniteForm=this.isIndefiniteForm,e.value=[];for(let t=0;t<this.value.length;t++)e.value.push(this.value[t].toJSON());return e}}class z extends q{constructor(e={}){super(e,Q),this.idBlock.isConstructed=!0}static blockName(){return"CONSTRUCTED"}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}toString(){const e=[];for(const t of this.valueBlock.value)e.push(t.toString().split("\n").map((e=>`  ${e}`)).join("\n"));const t=3===this.idBlock.tagClass?`[${this.idBlock.tagNumber}]`:this.constructor.blockName();return e.length?`${t} :\n${e.join("\n")}`:`${t} :`}}class Z extends M{constructor(e={}){super(e)}fromBER(e,t,r){return t}toBER(e=!1){return K}static blockName(){return"EndOfContentValueBlock"}}class Y extends q{constructor(e={}){super(e,Z),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}static blockName(){return"EndOfContent"}}class X extends M{constructor(t={}){if(super(t),this.value=e(t,U,!1),this.isHexOnly=e(t,N,!1),C in t)this.valueHex=t.valueHex.slice(0);else if(this.valueHex=new ArrayBuffer(1),!0===this.value){new Uint8Array(this.valueHex)[0]=255}}fromBER(e,t,s){if(!1===r(this,e,t,s))return-1;const i=new Uint8Array(e,t,s);s>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,this.valueHex=new ArrayBuffer(i.length);const a=new Uint8Array(this.valueHex);for(let e=0;e<i.length;e++)a[e]=i[e];return 0!==o.call(this)?this.value=!0:this.value=!1,this.blockLength=s,t+s}toBER(e=!1){return this.valueHex}static blockName(){return"BooleanValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class ee extends q{constructor(e={}){super(e,X),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}static blockName(){return"BOOLEAN"}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.value}`}}class te extends z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}static blockName(){return"SEQUENCE"}}class re extends z{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}static blockName(){return"SET"}}class se extends q{constructor(e={}){super(e,J),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}static blockName(){return"NULL"}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e=!1,t){const r=new ArrayBuffer(2);if(!e){const e=new Uint8Array(r);e[0]=5,e[1]=0}return t&&t.write(r),r}toString(){return`${this.constructor.blockName()}`}}class ie extends(T(Q)){constructor(t={}){super(t),this.isConstructed=e(t,E,!1)}fromBER(e,t,r){let s=0;if(!0===this.isConstructed){if(this.isHexOnly=!1,s=Q.prototype.fromBER.call(this,e,t,r),-1===s)return s;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===Y.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(t!==ae.blockName())return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,s=super.fromBER(e,t,r),this.blockLength=r;return s}toBER(e=!1,t){if(!0===this.isConstructed)return Q.prototype.toBER.call(this,e,t);let r=new ArrayBuffer(this.valueHex.byteLength);return!0===e||0===this.valueHex.byteLength||(r=this.valueHex.slice(0)),r}static blockName(){return"OctetStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class ae extends q{constructor(e={}){super(e,ie),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,0===r)return 0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){const s=e.slice(t,t+r);try{const e=qe(s);-1!==e.offset&&e.offset===r&&(this.valueBlock.value=[e.result])}catch(e){}}return super.fromBER(e,t,r)}static blockName(){return"OCTET STRING"}isEqual(e){return e instanceof ae!=!1&&JSON.stringify(this)===JSON.stringify(e)}toString(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?z.prototype.toString.call(this):`${this.constructor.blockName()} : ${t(this.valueBlock.valueHex)}`}}class ne extends(T(Q)){constructor(t={}){super(t),this.unusedBits=e(t,"unusedBits",0),this.isConstructed=e(t,E,!1),this.blockLength=this.valueHex.byteLength}fromBER(e,t,s){if(0===s)return t;let i=-1;if(!0===this.isConstructed){if(i=Q.prototype.fromBER.call(this,e,t,s),-1===i)return i;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===Y.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(t!==oe.blockName())return this.error="BIT STRING may consists of BIT STRINGs only",-1;if(this.unusedBits>0&&this.value[e].valueBlock.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;if(this.unusedBits=this.value[e].valueBlock.unusedBits,this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1}return i}if(!1===r(this,e,t,s))return-1;const a=new Uint8Array(e,t,s);if(this.unusedBits=a[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){const r=e.slice(t+1,t+s);try{const e=qe(r);-1!==e.offset&&e.offset===s-1&&(this.value=[e.result])}catch(e){}}this.valueHex=new ArrayBuffer(a.length-1);const n=new Uint8Array(this.valueHex);for(let e=0;e<s-1;e++)n[e]=a[e+1];return this.blockLength=a.length,t+s}toBER(e=!1,t){if(!0===this.isConstructed)return Q.prototype.toBER.call(this,e,t);if(!0===e)return new ArrayBuffer(this.valueHex.byteLength+1);if(0===this.valueHex.byteLength)return K;const r=new Uint8Array(this.valueHex),s=new ArrayBuffer(this.valueHex.byteLength+1),i=new Uint8Array(s);i[0]=this.unusedBits;for(let e=0;e<this.valueHex.byteLength;e++)i[e+1]=r[e];return s}static blockName(){return"BitStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.unusedBits=this.unusedBits,e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=t(this.valueHex,0,this.valueHex.byteLength),e}}class oe extends q{constructor(e={}){super(e,ne),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}static blockName(){return"BIT STRING"}fromBER(e,t,r){return 0===r?t:(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r))}isEqual(e){return e instanceof oe!=!1&&JSON.stringify(this)===JSON.stringify(e)}toString(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return z.prototype.toString.call(this);{const e=[],t=new Uint8Array(this.valueBlock.valueHex);for(const r of t)e.push(r.toString(2).padStart(8,"0"));return`${this.constructor.blockName()} : ${e.join("")}`}}}class le extends(T(M)){constructor(e={}){super(e),U in e&&(this.valueDec=e.value)}set valueHex(e){this._valueHex=e.slice(0),e.byteLength>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,e.byteLength>0&&(this._valueDec=o.call(this)))}get valueHex(){return this._valueHex}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this._valueHex=function(e){const t=e<0?-1*e:e;let r=128;for(let s=1;s<8;s++){if(t<=r){if(e<0){const e=i(r-t,8,s);return new Uint8Array(e)[0]|=128,e}let a=i(t,8,s),n=new Uint8Array(a);if(128&n[0]){const e=a.slice(0),t=new Uint8Array(e);a=new ArrayBuffer(a.byteLength+1),n=new Uint8Array(a);for(let r=0;r<e.byteLength;r++)n[r+1]=t[r];n[0]=0}return a}r*=Math.pow(2,8)}return new ArrayBuffer(0)}(e)}get valueDec(){return this._valueDec}fromDER(e,t,r,s=0){const i=this.fromBER(e,t,r);if(-1===i)return i;const a=new Uint8Array(this._valueHex);if(0===a[0]&&128&a[1]){const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}else if(0!==s&&this._valueHex.byteLength<s){s-this._valueHex.byteLength>1&&(s=this._valueHex.byteLength+1);const e=new ArrayBuffer(s);new Uint8Array(e).set(a,s-this._valueHex.byteLength),this._valueHex=e.slice(0)}return i}toDER(e=!1){const t=new Uint8Array(this._valueHex);switch(!0){case!!(128&t[0]):{const e=new ArrayBuffer(this._valueHex.byteLength+1),r=new Uint8Array(e);r[0]=0,r.set(t,1),this._valueHex=e.slice(0)}break;case 0===t[0]&&!(128&t[1]):{const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}}return this.toBER(e)}fromBER(e,t,r){const s=super.fromBER(e,t,r);return-1===s?s:(this.blockLength=r,t+r)}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"IntegerValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e}toString(){function e(e,t){const r=new Uint8Array([0]);let s=new Uint8Array(e),i=new Uint8Array(t),a=s.slice(0);const o=a.length-1;let l=i.slice(0);const c=l.length-1;let h=0;let u=0;for(let e=c<o?o:c;e>=0;e--,u++){if(!0==u<l.length)h=a[o-u]+l[c-u]+r[0];else h=a[o-u]+r[0];if(r[0]=h/10,!0==u>=a.length)a=n(new Uint8Array([h%10]),a);else a[o-u]=h%10}return r[0]>0&&(a=n(r,a)),a.slice(0)}function t(e){if(e>=A.length)for(let t=A.length;t<=e;t++){const e=new Uint8Array([0]);let r=A[t-1].slice(0);for(let t=r.length-1;t>=0;t--){const s=new Uint8Array([(r[t]<<1)+e[0]]);e[0]=s[0]/10,r[t]=s[0]%10}e[0]>0&&(r=n(e,r)),A.push(r)}return A[e]}function r(e,t){let r=0,s=new Uint8Array(e),i=new Uint8Array(t),a=s.slice(0);const n=a.length-1;let o=i.slice(0);const l=o.length-1;let c,h=0;for(let e=l;e>=0;e--,h++)if(c=a[n-h]-o[l-h]-r,!0==c<0)r=1,a[n-h]=c+10;else r=0,a[n-h]=c;if(r>0)for(let e=n-l+1;e>=0;e--,h++){if(c=a[n-h]-r,!(c<0)){r=0,a[n-h]=c;break}r=1,a[n-h]=c+10}return a.slice()}const s=8*this._valueHex.byteLength-1;let i,a=new Uint8Array(8*this._valueHex.byteLength/3),o=0;const l=new Uint8Array(this._valueHex);let c="",h=!1;for(let n=this._valueHex.byteLength-1;n>=0;n--){i=l[n];for(let n=0;n<8;n++){if(!(1&~i))if(o===s)a=r(t(o),a),c="-";else a=e(a,t(o));o++,i>>=1}}for(let e=0;e<a.length;e++)a[e]&&(h=!0),h&&(c+=B.charAt(a[e]));return!1===h&&(c+=B.charAt(0)),c}}class ce extends q{constructor(e={}){super(e,le),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}static blockName(){return"INTEGER"}isEqual(e){return e instanceof ce?this.valueBlock.isHexOnly&&e.valueBlock.isHexOnly?l(this.valueBlock.valueHex,e.valueBlock.valueHex):this.valueBlock.isHexOnly===e.valueBlock.isHexOnly&&this.valueBlock.valueDec===e.valueBlock.valueDec:e instanceof ArrayBuffer&&l(this.valueBlock.valueHex,e)}convertToDER(){const e=new ce({valueHex:this.valueBlock.valueHex});return e.valueBlock.toDER(),e}convertFromDER(){const e=this.valueBlock.valueHex.byteLength%2?this.valueBlock.valueHex.byteLength+1:this.valueBlock.valueHex.byteLength,t=new ce({valueHex:this.valueBlock.valueHex});return t.valueBlock.fromDER(t.valueBlock.valueHex,0,t.valueBlock.valueHex.byteLength,e),t}toString(){v();const e=t(this.valueBlock.valueHex),r=BigInt(`0x${e}`);return`${this.constructor.blockName()} : ${r.toString()}`}}class he extends ce{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}static blockName(){return"ENUMERATED"}}class ue extends(T(J)){constructor(t={}){super(t),this.valueDec=e(t,j,-1),this.isFirstSid=e(t,"isFirstSid",!1)}static blockName(){return"sidBlock"}fromBER(e,t,i){if(0===i)return t;if(!1===r(this,e,t,i))return-1;const a=new Uint8Array(e,t,i);this.valueHex=new ArrayBuffer(i);let n=new Uint8Array(this.valueHex);for(let e=0;e<i&&(n[e]=127&a[e],this.blockLength++,128&a[e]);e++);const o=new ArrayBuffer(this.blockLength),l=new Uint8Array(o);for(let e=0;e<this.blockLength;e++)l[e]=n[e];return this.valueHex=o.slice(0),n=new Uint8Array(this.valueHex),128&a[this.blockLength-1]?(this.error="End of input reached before message was fully decoded",-1):(0===n[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=s(n,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){v();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;const r=new Uint8Array(t.length/7);for(let e=0;e<r.length;e++)r[e]=parseInt(t.slice(7*e,7*e+7),2)+(e+1<r.length?128:0);this.fromBER(r.buffer,0,r.length)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const s=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|s[e];return r[this.blockLength-1]=s[this.blockLength-1],t}const s=i(this.valueDec,7);if(0===s.byteLength)return this.error="Error during encoding SID value",K;if(t=new ArrayBuffer(s.byteLength),!1===e){const e=new Uint8Array(s);r=new Uint8Array(t);for(let t=0;t<s.byteLength-1;t++)r[t]=128|e[t];r[s.byteLength-1]=e[s.byteLength-1]}return t}toString(){let e="";if(!0===this.isHexOnly)e=t(this.valueHex,0,this.valueHex.byteLength);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e.isFirstSid=this.isFirstSid,e}}class me extends M{constructor(t={}){super(t),this.fromString(e(t,U,R))}fromBER(e,t,r){let s=t;for(;r>0;){const t=new ue;if(s=t.fromBER(e,s,r),-1===s)return this.blockLength=0,this.error=t.error,s;0===this.value.length&&(t.isFirstSid=!0),this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return s}toBER(e=!1){const t=[];for(let r=0;r<this.value.length;r++){const s=this.value[r].toBER(e);if(0===s.byteLength)return this.error=this.value[r].error,K;t.push(s)}return k(t)}fromString(e){this.value=[];let t=0,r=0,s="",i=!1;do{if(r=e.indexOf(".",t),s=-1===r?e.substr(t):e.substr(t,r-t),t=r+1,i){const e=this.value[0];let t=0;switch(e.valueDec){case 0:break;case 1:t=40;break;case 2:t=80;break;default:return this.value=[],!1}const r=parseInt(s,10);if(isNaN(r))return!0;e.valueDec=r+t,i=!1}else{const e=new ue;if(s>Number.MAX_SAFE_INTEGER){v();const t=BigInt(s);e.valueBigInt=t}else if(e.valueDec=parseInt(s,10),isNaN(e.valueDec))return!0;0===this.value.length&&(e.isFirstSid=!0,i=!0),this.value.push(e)}}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let s=this.value[r].toString();0!==r&&(e=`${e}.`),t?(s=`{${s}}`,this.value[r].isFirstSid?e=`2.{${s} - 80}`:e+=s):e+=s}return e}static blockName(){return"ObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.value=this.toString(),e.sidArray=[];for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}}class fe extends q{constructor(e={}){super(e,me),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}static blockName(){return"OBJECT IDENTIFIER"}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.toString()}`}}class ge extends(T(J)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"Utf8StringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class de extends q{constructor(e={}){super(e,ge),U in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}static blockName(){return"UTF8String"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e));try{this.valueBlock.value=decodeURIComponent(escape(this.valueBlock.value))}catch(e){this.warnings.push(`Error during "decodeURIComponent": ${e}, using raw string`)}}fromString(e){const t=unescape(encodeURIComponent(e)),r=t.length;this.valueBlock.valueHex=new ArrayBuffer(r);const s=new Uint8Array(this.valueBlock.valueHex);for(let e=0;e<r;e++)s[e]=t.charCodeAt(e);this.valueBlock.value=e}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.value}`}}class pe extends(T(J)){constructor(t={}){super(t),this.valueDec=e(t,j,-1)}static blockName(){return"relativeSidBlock"}fromBER(e,t,i){if(0===i)return t;if(!1===r(this,e,t,i))return-1;const a=new Uint8Array(e,t,i);this.valueHex=new ArrayBuffer(i);let n=new Uint8Array(this.valueHex);for(let e=0;e<i&&(n[e]=127&a[e],this.blockLength++,128&a[e]);e++);const o=new ArrayBuffer(this.blockLength),l=new Uint8Array(o);for(let e=0;e<this.blockLength;e++)l[e]=n[e];return this.valueHex=o.slice(0),n=new Uint8Array(this.valueHex),128&a[this.blockLength-1]?(this.error="End of input reached before message was fully decoded",-1):(0===n[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=s(n,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const s=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|s[e];return r[this.blockLength-1]=s[this.blockLength-1],t}const s=i(this.valueDec,7);if(0===s.byteLength)return this.error="Error during encoding SID value",K;if(t=new ArrayBuffer(s.byteLength),!1===e){const e=new Uint8Array(s);r=new Uint8Array(t);for(let t=0;t<s.byteLength-1;t++)r[t]=128|e[t];r[s.byteLength-1]=e[s.byteLength-1]}return t}toString(){let e="";return e=!0===this.isHexOnly?t(this.valueHex,0,this.valueHex.byteLength):this.valueDec.toString(),e}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e}}class ye extends M{constructor(t={}){super(t),this.fromString(e(t,U,R))}fromBER(e,t,r){let s=t;for(;r>0;){const t=new pe;if(s=t.fromBER(e,s,r),-1===s)return this.blockLength=0,this.error=t.error,s;this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return s}toBER(e=!1){let t=[];for(let r=0;r<this.value.length;r++){const s=this.value[r].toBER(e);if(0===s.byteLength)return this.error=this.value[r].error,K;t.push(s)}return k(t)}fromString(e){this.value=[];let t=0,r=0,s="";do{r=e.indexOf(".",t),s=-1===r?e.substr(t):e.substr(t,r-t),t=r+1;const i=new pe;if(i.valueDec=parseInt(s,10),isNaN(i.valueDec))return!0;this.value.push(i)}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let s=this.value[r].toString();0!==r&&(e=`${e}.`),t?(s=`{${s}}`,e+=s):e+=s}return e}static blockName(){return"RelativeObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.value=this.toString(),e.sidArray=[];for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}}class be extends q{constructor(e={}){super(e,ye),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}static blockName(){return"RelativeObjectIdentifier"}}class ve extends(T(J)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"BmpStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class we extends q{constructor(e={}){super(e,ve),U in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}static blockName(){return"BMPString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=2){const t=r[e];r[e]=r[e+1],r[e+1]=t}this.valueBlock.value=String.fromCharCode.apply(null,new Uint16Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(2*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),a=new Uint8Array(t);if(a.length>2)continue;const n=2-a.length;for(let e=a.length-1;e>=0;e--)r[2*s+e+n]=a[e]}this.valueBlock.value=e}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.value}`}}class ke extends(T(J)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"UniversalStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Ae extends q{constructor(e={}){super(e,ke),U in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}static blockName(){return"UniversalString"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=4)r[e]=r[e+3],r[e+1]=r[e+2],r[e+2]=0,r[e+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(4*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++){const t=i(e.charCodeAt(s),8),a=new Uint8Array(t);if(a.length>4)continue;const n=4-a.length;for(let e=a.length-1;e>=0;e--)r[4*s+e+n]=a[e]}this.valueBlock.value=e}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.value}`}}class Be extends(T(J)){constructor(e={}){super(e),this.value="",this.isHexOnly=!0}static blockName(){return"SimpleStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class Se extends q{constructor(e={}){super(e,Be),U in e&&this.fromString(e.value)}static blockName(){return"SIMPLESTRING"}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(t);const r=new Uint8Array(this.valueBlock.valueHex);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s);this.valueBlock.value=e}toString(){return`${this.constructor.blockName()} : ${this.valueBlock.value}`}}class Ce extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}static blockName(){return"NumericString"}}class Ne extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}static blockName(){return"PrintableString"}}class xe extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}static blockName(){return"TeletexString"}}class Pe extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}static blockName(){return"VideotexString"}}class Ie extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}static blockName(){return"IA5String"}}class Ee extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}static blockName(){return"GraphicString"}}class He extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}static blockName(){return"VisibleString"}}class Le extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}static blockName(){return"GeneralString"}}class Oe extends Se{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}static blockName(){return"CharacterString"}}class Ue extends He{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,U in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}V in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){const t=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/gi.exec(e);if(null===t)return void(this.error="Wrong input string for conversion");const r=parseInt(t[1],10);this.year=r>=50?1900+r:2e3+r,this.month=parseInt(t[2],10),this.day=parseInt(t[3],10),this.hour=parseInt(t[4],10),this.minute=parseInt(t[5],10),this.second=parseInt(t[6],10)}toString(){const e=new Array(7);return e[0]=c(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=c(this.month,2),e[2]=c(this.day,2),e[3]=c(this.hour,2),e[4]=c(this.minute,2),e[5]=c(this.second,2),e[6]="Z",e.join("")}static blockName(){return"UTCTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e}}class Ve extends He{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,this.millisecond=0,U in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}V in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromBER(e,t,r){const s=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===s?(this.error=this.valueBlock.error,s):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),s)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t,r=!1,s="",i="",a=0,n=0,o=0;if("Z"===e[e.length-1])s=e.substr(0,e.length-1),r=!0;else{const t=new Number(e[e.length-1]);if(isNaN(t.valueOf()))throw new Error("Wrong input string for conversion");s=e}if(r){if(-1!==s.indexOf("+"))throw new Error("Wrong input string for conversion");if(-1!==s.indexOf("-"))throw new Error("Wrong input string for conversion")}else{let e=1,t=s.indexOf("+"),r="";if(-1===t&&(t=s.indexOf("-"),e=-1),-1!==t){if(r=s.substr(t+1),s=s.substr(0,t),2!==r.length&&4!==r.length)throw new Error("Wrong input string for conversion");let i=new Number(r.substr(0,2));if(isNaN(i.valueOf()))throw new Error("Wrong input string for conversion");if(n=e*i,4===r.length){if(i=new Number(r.substr(2,2)),isNaN(i.valueOf()))throw new Error("Wrong input string for conversion");o=e*i}}}let l=s.indexOf(".");if(-1===l&&(l=s.indexOf(",")),-1!==l){const e=new Number(`0${s.substr(l)}`);if(isNaN(e.valueOf()))throw new Error("Wrong input string for conversion");a=e.valueOf(),i=s.substr(0,l)}else i=s;switch(!0){case 8===i.length:if(t=/(\d{4})(\d{2})(\d{2})/gi,-1!==l)throw new Error("Wrong input string for conversion");break;case 10===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*a;this.minute=Math.floor(e),e=60*(e-this.minute),this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 12===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*a;this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 14===i.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){const e=1e3*a;this.millisecond=Math.floor(e)}break;default:throw new Error("Wrong input string for conversion")}const c=t.exec(i);if(null===c)throw new Error("Wrong input string for conversion");for(let e=1;e<c.length;e++)switch(e){case 1:this.year=parseInt(c[e],10);break;case 2:this.month=parseInt(c[e],10);break;case 3:this.day=parseInt(c[e],10);break;case 4:this.hour=parseInt(c[e],10)+n;break;case 5:this.minute=parseInt(c[e],10)+o;break;case 6:this.second=parseInt(c[e],10);break;default:throw new Error("Wrong input string for conversion")}if(!1===r){const e=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=e.getUTCFullYear(),this.month=e.getUTCMonth(),this.day=e.getUTCDay(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}}toString(){const e=[];return e.push(c(this.year,4)),e.push(c(this.month,2)),e.push(c(this.day,2)),e.push(c(this.hour,2)),e.push(c(this.minute,2)),e.push(c(this.second,2)),0!==this.millisecond&&(e.push("."),e.push(c(this.millisecond,3))),e.push("Z"),e.join("")}static blockName(){return"GeneralizedTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e.millisecond=this.millisecond,e}}class De extends de{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}static blockName(){return"DATE"}}class je extends de{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}static blockName(){return"TimeOfDay"}}class Re extends de{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}static blockName(){return"DateTime"}}class Ke extends de{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}static blockName(){return"Duration"}}class _e extends de{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}static blockName(){return"TIME"}}class Je{constructor(t={}){this.value=e(t,U,[]),this.optional=e(t,L,!1)}}class Te{constructor(t={}){this.name=e(t,S,R),this.optional=e(t,L,!1)}}class Fe{constructor(t={}){this.name=e(t,S,R),this.optional=e(t,L,!1),this.value=e(t,U,new Te),this.local=e(t,D,!1)}}class $e{constructor(t={}){this.data=e(t,"data",K)}fromBER(e,t,r){return this.data=e.slice(t,r),t+r}toBER(e=!1){return this.data}}function Me(e,t,s){const i=t;let a=new q({},Object);const n=new J;if(!1===r(n,e,t,s))return a.error=n.error,{offset:-1,result:a};if(0===new Uint8Array(e,t,s).length)return a.error="Zero buffer length",{offset:-1,result:a};let o=a.idBlock.fromBER(e,t,s);if(a.warnings.concat(a.idBlock.warnings),-1===o)return a.error=a.idBlock.error,{offset:-1,result:a};if(t=o,s-=a.idBlock.blockLength,o=a.lenBlock.fromBER(e,t,s),a.warnings.concat(a.lenBlock.warnings),-1===o)return a.error=a.lenBlock.error,{offset:-1,result:a};if(t=o,s-=a.lenBlock.blockLength,!1===a.idBlock.isConstructed&&!0===a.lenBlock.isIndefiniteForm)return a.error="Indefinite length form used for primitive encoding form",{offset:-1,result:a};let l=q;if(1===a.idBlock.tagClass){if(a.idBlock.tagNumber>=37&&!1===a.idBlock.isHexOnly)return a.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:a};switch(a.idBlock.tagNumber){case 0:if(!0===a.idBlock.isConstructed&&a.lenBlock.length>0)return a.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:a};l=Y;break;case 1:l=ee;break;case 2:l=ce;break;case 3:l=oe;break;case 4:l=ae;break;case 5:l=se;break;case 6:l=fe;break;case 10:l=he;break;case 12:l=de;break;case 13:l=be;break;case 14:l=_e;break;case 15:return a.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:a};case 16:l=te;break;case 17:l=re;break;case 18:l=Ce;break;case 19:l=Ne;break;case 20:l=xe;break;case 21:l=Pe;break;case 22:l=Ie;break;case 23:l=Ue;break;case 24:l=Ve;break;case 25:l=Ee;break;case 26:l=He;break;case 27:l=Le;break;case 28:l=Ae;break;case 29:l=Oe;break;case 30:l=we;break;case 31:l=De;break;case 32:l=je;break;case 33:l=Re;break;case 34:l=Ke;break;default:{let e;e=!0===a.idBlock.isConstructed?new z:new G,e.idBlock=a.idBlock,e.lenBlock=a.lenBlock,e.warnings=a.warnings,a=e}}}else l=!0===a.idBlock.isConstructed?z:G;return a=function(e,t){if(e instanceof t)return e;const r=new t;return r.idBlock=e.idBlock,r.lenBlock=e.lenBlock,r.warnings=e.warnings,r.valueBeforeDecode=e.valueBeforeDecode.slice(0),r}(a,l),o=a.fromBER(e,t,!0===a.lenBlock.isIndefiniteForm?s:a.lenBlock.length),a.valueBeforeDecode=e.slice(i,i+a.blockLength),{offset:o,result:a}}function qe(e){if(0===e.byteLength){const e=new q({},Object);return e.error="Input buffer has zero length",{offset:-1,result:e}}return Me(e,0,e.byteLength)}function We(e,t,r){if(r instanceof Je){for(let s=0;s<r.value.length;s++){if(!0===We(e,t,r.value[s]).verified)return{verified:!0,result:e}}{const e={verified:!1,result:{error:"Wrong values for Choice type"}};return r.hasOwnProperty(S)&&(e.name=r.name),e}}if(r instanceof Te)return r.hasOwnProperty(S)&&(e[r.name]=t),{verified:!0,result:e};if(e instanceof Object==!1)return{verified:!1,result:{error:"Wrong root object"}};if(t instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 data"}};if(r instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(x in r==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("fromBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("toBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=r.idBlock.toBER(!1);if(0===s.byteLength)return{verified:!1,result:{error:"Error encoding idBlock for ASN.1 schema"}};if(-1===r.idBlock.fromBER(s,0,s.byteLength))return{verified:!1,result:{error:"Error decoding idBlock for ASN.1 schema"}};if(!1===r.idBlock.hasOwnProperty(P))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagClass!==t.idBlock.tagClass)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty(I))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagNumber!==t.idBlock.tagNumber)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty(E))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isConstructed!==t.idBlock.isConstructed)return{verified:!1,result:e};if(N in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isHexOnly!==t.idBlock.isHexOnly)return{verified:!1,result:e};if(!0===r.idBlock.isHexOnly){if(C in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const s=new Uint8Array(r.idBlock.valueHex),i=new Uint8Array(t.idBlock.valueHex);if(s.length!==i.length)return{verified:!1,result:e};for(let t=0;t<s.length;t++)if(s[t]!==i[1])return{verified:!1,result:e}}if(r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&(e[r.name]=t)),!0===r.idBlock.isConstructed){let s=0,i={verified:!1},a=r.valueBlock.value.length;if(a>0&&r.valueBlock.value[0]instanceof Fe&&(a=t.valueBlock.value.length),0===a)return{verified:!0,result:e};if(0===t.valueBlock.value.length&&0!==r.valueBlock.value.length){let t=!0;for(let e=0;e<r.valueBlock.value.length;e++)t=t&&(r.valueBlock.value[e].optional||!1);return!0===t?{verified:!0,result:e}:(r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&delete e[r.name]),e.error="Inconsistent object length",{verified:!1,result:e})}for(let n=0;n<a;n++)if(n-s>=t.valueBlock.value.length){if(!1===r.valueBlock.value[n].optional){const t={verified:!1,result:e};return e.error="Inconsistent length between ASN.1 data and schema",r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&(delete e[r.name],t.name=r.name)),t}}else if(r.valueBlock.value[0]instanceof Fe){if(i=We(e,t.valueBlock.value[n],r.valueBlock.value[0].value),!1===i.verified){if(!0!==r.valueBlock.value[0].optional)return r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&delete e[r.name]),i;s++}if(S in r.valueBlock.value[0]&&r.valueBlock.value[0].name.length>0){let s={};s=D in r.valueBlock.value[0]&&!0===r.valueBlock.value[0].local?t:e,void 0===s[r.valueBlock.value[0].name]&&(s[r.valueBlock.value[0].name]=[]),s[r.valueBlock.value[0].name].push(t.valueBlock.value[n])}}else if(i=We(e,t.valueBlock.value[n-s],r.valueBlock.value[n]),!1===i.verified){if(!0!==r.valueBlock.value[n].optional)return r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&delete e[r.name]),i;s++}if(!1===i.verified){const t={verified:!1,result:e};return r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return{verified:!0,result:e}}if(O in r&&C in t.valueBlock){const s=qe(t.valueBlock.valueHex);if(-1===s.offset){const t={verified:!1,result:s.result};return r.hasOwnProperty(S)&&(r.name=r.name.replace(/^\s+|\s+$/g,R),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return We(e,s.result,r.primitiveSchema)}return{verified:!0,result:e}}class Ge{constructor(t={}){this.algorithmId=e(t,"algorithmId",Ge.defaultValues("algorithmId")),"algorithmParams"in t&&(this.algorithmParams=e(t,"algorithmParams",Ge.defaultValues("algorithmParams"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"algorithmId":return"";case"algorithmParams":return new Te;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"algorithmId":return""===t;case"algorithmParams":return t instanceof Te;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",optional:r.optional||!1,value:[new fe({name:r.algorithmIdentifier||""}),new Te({name:r.algorithmParams||"",optional:!0})]})}fromSchema(e){b(e,["algorithm","params"]);const t=We(e,e,Ge.schema({names:{algorithmIdentifier:"algorithm",algorithmParams:"params"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AlgorithmIdentifier");this.algorithmId=t.result.algorithm.valueBlock.toString(),"params"in t.result&&(this.algorithmParams=t.result.params)}toSchema(){const e=[];return e.push(new fe({value:this.algorithmId})),"algorithmParams"in this&&this.algorithmParams instanceof Te==!1&&e.push(this.algorithmParams),new te({value:e})}toJSON(){const e={algorithmId:this.algorithmId};return"algorithmParams"in this&&this.algorithmParams instanceof Te==!1&&(e.algorithmParams=this.algorithmParams.toJSON()),e}isEqual(e){return e instanceof Ge!=!1&&(this.algorithmId===e.algorithmId&&("algorithmParams"in this?"algorithmParams"in e&&JSON.stringify(this.algorithmParams)===JSON.stringify(e.algorithmParams):!("algorithmParams"in e)))}}class Qe{constructor(t={}){this.x=e(t,"x",Qe.defaultValues("x")),this.y=e(t,"y",Qe.defaultValues("y")),this.namedCurve=e(t,"namedCurve",Qe.defaultValues("namedCurve")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"x":case"y":return new ArrayBuffer(0);case"namedCurve":return"";default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"x":case"y":return l(t,Qe.defaultValues(e));case"namedCurve":return""===t;default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static schema(e={}){return new $e}fromSchema(e){if(e instanceof ArrayBuffer==!1)throw new Error("Object's schema was not verified against input data for ECPublicKey");if(4!==new Uint8Array(e)[0])throw new Error("Object's schema was not verified against input data for ECPublicKey");let t;switch(this.namedCurve){case"1.2.840.10045.3.1.7":t=32;break;case"1.3.132.0.34":t=48;break;case"1.3.132.0.35":t=66;break;default:throw new Error(`Incorrect curve OID: ${this.namedCurve}`)}if(e.byteLength!==2*t+1)throw new Error("Object's schema was not verified against input data for ECPublicKey");this.x=e.slice(1,t+1),this.y=e.slice(1+t,2*t+1)}toSchema(){return new $e({data:a(new Uint8Array([4]).buffer,this.x,this.y)})}toJSON(){let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}return{crv:e,x:m(g(this.x),!0,!0,!1),y:m(g(this.y),!0,!0,!1)}}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("x"in e))throw new Error('Absent mandatory parameter "x"');{const r=d(f(e.x,!0));if(r.byteLength<t){this.x=new ArrayBuffer(t);const e=new Uint8Array(this.x),s=new Uint8Array(r);e.set(s,1)}else this.x=r.slice(0,t)}if(!("y"in e))throw new Error('Absent mandatory parameter "y"');{const r=d(f(e.y,!0));if(r.byteLength<t){this.y=new ArrayBuffer(t);const e=new Uint8Array(this.y),s=new Uint8Array(r);e.set(s,1)}else this.y=r.slice(0,t)}}}class ze{constructor(t={}){this.modulus=e(t,"modulus",ze.defaultValues("modulus")),this.publicExponent=e(t,"publicExponent",ze.defaultValues("publicExponent")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"modulus":case"publicExponent":return new ce;default:throw new Error(`Invalid member name for RSAPublicKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ce({name:r.modulus||""}),new ce({name:r.publicExponent||""})]})}fromSchema(e){b(e,["modulus","publicExponent"]);const t=We(e,e,ze.schema({names:{modulus:"modulus",publicExponent:"publicExponent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPublicKey");this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent}toSchema(){return new te({value:[this.modulus.convertToDER(),this.publicExponent]})}toJSON(){return{n:m(g(this.modulus.valueBlock.valueHex),!0,!0,!0),e:m(g(this.publicExponent.valueBlock.valueHex),!0,!0,!0)}}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');{const t=d(f(e.n,!0));this.modulus=new ce({valueHex:t.slice(0,Math.pow(2,y(t.byteLength)))})}if(!("e"in e))throw new Error('Absent mandatory parameter "e"');this.publicExponent=new ce({valueHex:d(f(e.e,!0)).slice(0,3)})}}class Ze{constructor(t={}){this.algorithm=e(t,"algorithm",Ze.defaultValues("algorithm")),this.subjectPublicKey=e(t,"subjectPublicKey",Ze.defaultValues("subjectPublicKey")),"parsedKey"in t&&(this.parsedKey=e(t,"parsedKey",Ze.defaultValues("parsedKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"algorithm":return new Ge;case"subjectPublicKey":return new oe;default:throw new Error(`Invalid member name for PublicKeyInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[Ge.schema(r.algorithm||{}),new oe({name:r.subjectPublicKey||""})]})}fromSchema(e){b(e,["algorithm","subjectPublicKey"]);const t=We(e,e,Ze.schema({names:{algorithm:{names:{blockName:"algorithm"}},subjectPublicKey:"subjectPublicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PublicKeyInfo");switch(this.algorithm=new Ge({schema:t.result.algorithm}),this.subjectPublicKey=t.result.subjectPublicKey,this.algorithm.algorithmId){case"1.2.840.10045.2.1":if("algorithmParams"in this.algorithm&&this.algorithm.algorithmParams.constructor.blockName()===fe.blockName())try{this.parsedKey=new Qe({namedCurve:this.algorithm.algorithmParams.valueBlock.toString(),schema:this.subjectPublicKey.valueBlock.valueHex})}catch(e){}break;case"1.2.840.113549.1.1.1":{const e=qe(this.subjectPublicKey.valueBlock.valueHex);if(-1!==e.offset)try{this.parsedKey=new ze({schema:e.result})}catch(e){}}}}toSchema(){return new te({value:[this.algorithm.toSchema(),this.subjectPublicKey]})}toJSON(){if("parsedKey"in this==!1)return{algorithm:this.algorithm.toJSON(),subjectPublicKey:this.subjectPublicKey.toJSON()};const e={};switch(this.algorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Qe({json:e}),this.algorithm=new Ge({algorithmId:"1.2.840.10045.2.1",algorithmParams:new fe({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new ze({json:e}),this.algorithm=new Ge({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new se});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.subjectPublicKey=new oe({valueHex:this.parsedKey.toSchema().toBER(!1)})}}importKey(e){let t=Promise.resolve();const r=this;if(void 0===e)return Promise.reject("Need to provide publicKey input parameter");const s=ut();return void 0===s?Promise.reject("Unable to create WebCrypto object"):(t=t.then((()=>s.exportKey("spki",e))),t=t.then((e=>{const t=qe(e);try{r.fromSchema(t.result)}catch(e){return Promise.reject("Error during initializing object from schema")}}),(e=>Promise.reject(`Error during exporting public key: ${e}`))),t)}}class Ye{constructor(t={}){this.type=e(t,"type",Ye.defaultValues("type")),this.values=e(t,"values",Ye.defaultValues("values")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return"";case"values":return[];default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return""===t;case"values":return 0===t.length;default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.type||""}),new re({name:r.setName||"",value:[new Fe({name:r.values||"",value:new Te})]})]})}fromSchema(e){b(e,["type","values"]);const t=We(e,e,Ye.schema({names:{type:"type",values:"values"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Attribute");this.type=t.result.type.valueBlock.toString(),this.values=t.result.values}toSchema(){return new te({value:[new fe({value:this.type}),new re({value:this.values})]})}toJSON(){return{type:this.type,values:Array.from(this.values,(e=>e.toJSON()))}}}class Xe{constructor(t={}){this.version=e(t,"version",Xe.defaultValues("version")),this.privateKey=e(t,"privateKey",Xe.defaultValues("privateKey")),"namedCurve"in t&&(this.namedCurve=e(t,"namedCurve",Xe.defaultValues("namedCurve"))),"publicKey"in t&&(this.publicKey=e(t,"publicKey",Xe.defaultValues("publicKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 1;case"privateKey":return new ae;case"namedCurve":return"";case"publicKey":return new Qe;default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"version":return t===Xe.defaultValues(e);case"privateKey":return t.isEqual(Xe.defaultValues(e));case"namedCurve":return""===t;case"publicKey":return Qe.compareWithDefault("namedCurve",t.namedCurve)&&Qe.compareWithDefault("x",t.x)&&Qe.compareWithDefault("y",t.y);default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ce({name:r.version||""}),new ae({name:r.privateKey||""}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new fe({name:r.namedCurve||""})]}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new oe({name:r.publicKey||""})]})]})}fromSchema(e){b(e,["version","privateKey","namedCurve","publicKey"]);const t=We(e,e,Xe.schema({names:{version:"version",privateKey:"privateKey",namedCurve:"namedCurve",publicKey:"publicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ECPrivateKey");if(this.version=t.result.version.valueBlock.valueDec,this.privateKey=t.result.privateKey,"namedCurve"in t.result&&(this.namedCurve=t.result.namedCurve.valueBlock.toString()),"publicKey"in t.result){const e={schema:t.result.publicKey.valueBlock.valueHex};"namedCurve"in this&&(e.namedCurve=this.namedCurve),this.publicKey=new Qe(e)}}toSchema(){const e=[new ce({value:this.version}),this.privateKey];return"namedCurve"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:0},value:[new fe({value:this.namedCurve})]})),"publicKey"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:1},value:[new oe({valueHex:this.publicKey.toSchema().toBER(!1)})]})),new te({value:e})}toJSON(){if("namedCurve"in this==!1||Xe.compareWithDefault("namedCurve",this.namedCurve))throw new Error('Not enough information for making JSON: absent "namedCurve" value');let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}const t={crv:e,d:m(g(this.privateKey.valueBlock.valueHex),!0,!0,!1)};if("publicKey"in this){const e=this.publicKey.toJSON();t.x=e.x,t.y=e.y}return t}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("d"in e))throw new Error('Absent mandatory parameter "d"');{const r=d(f(e.d,!0));if(r.byteLength<t){const e=new ArrayBuffer(t),s=new Uint8Array(e),i=new Uint8Array(r);s.set(i,1),this.privateKey=new ae({valueHex:e})}else this.privateKey=new ae({valueHex:r.slice(0,t)})}"x"in e&&"y"in e&&(this.publicKey=new Qe({json:e}))}}class et{constructor(t={}){this.prime=e(t,"prime",et.defaultValues("prime")),this.exponent=e(t,"exponent",et.defaultValues("exponent")),this.coefficient=e(t,"coefficient",et.defaultValues("coefficient")),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"prime":case"exponent":case"coefficient":return new ce;default:throw new Error(`Invalid member name for OtherPrimeInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ce({name:r.prime||""}),new ce({name:r.exponent||""}),new ce({name:r.coefficient||""})]})}fromSchema(e){b(e,["prime","exponent","coefficient"]);const t=We(e,e,et.schema({names:{prime:"prime",exponent:"exponent",coefficient:"coefficient"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for OtherPrimeInfo");this.prime=t.result.prime.convertFromDER(),this.exponent=t.result.exponent.convertFromDER(),this.coefficient=t.result.coefficient.convertFromDER()}toSchema(){return new te({value:[this.prime.convertToDER(),this.exponent.convertToDER(),this.coefficient.convertToDER()]})}toJSON(){return{r:m(g(this.prime.valueBlock.valueHex),!0,!0),d:m(g(this.exponent.valueBlock.valueHex),!0,!0),t:m(g(this.coefficient.valueBlock.valueHex),!0,!0)}}fromJSON(e){if(!("r"in e))throw new Error('Absent mandatory parameter "r"');if(this.prime=new ce({valueHex:d(f(e.r,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.exponent=new ce({valueHex:d(f(e.d,!0))}),!("t"in e))throw new Error('Absent mandatory parameter "t"');this.coefficient=new ce({valueHex:d(f(e.t,!0))})}}class tt{constructor(t={}){this.version=e(t,"version",tt.defaultValues("version")),this.modulus=e(t,"modulus",tt.defaultValues("modulus")),this.publicExponent=e(t,"publicExponent",tt.defaultValues("publicExponent")),this.privateExponent=e(t,"privateExponent",tt.defaultValues("privateExponent")),this.prime1=e(t,"prime1",tt.defaultValues("prime1")),this.prime2=e(t,"prime2",tt.defaultValues("prime2")),this.exponent1=e(t,"exponent1",tt.defaultValues("exponent1")),this.exponent2=e(t,"exponent2",tt.defaultValues("exponent2")),this.coefficient=e(t,"coefficient",tt.defaultValues("coefficient")),"otherPrimeInfos"in t&&(this.otherPrimeInfos=e(t,"otherPrimeInfos",tt.defaultValues("otherPrimeInfos"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 0;case"modulus":case"publicExponent":case"privateExponent":case"prime1":case"prime2":case"exponent1":case"exponent2":case"coefficient":return new ce;case"otherPrimeInfos":return[];default:throw new Error(`Invalid member name for RSAPrivateKey class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ce({name:r.version||""}),new ce({name:r.modulus||""}),new ce({name:r.publicExponent||""}),new ce({name:r.privateExponent||""}),new ce({name:r.prime1||""}),new ce({name:r.prime2||""}),new ce({name:r.exponent1||""}),new ce({name:r.exponent2||""}),new ce({name:r.coefficient||""}),new te({optional:!0,value:[new Fe({name:r.otherPrimeInfosName||"",value:et.schema(r.otherPrimeInfo||{})})]})]})}fromSchema(e){b(e,["version","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos"]);const t=We(e,e,tt.schema({names:{version:"version",modulus:"modulus",publicExponent:"publicExponent",privateExponent:"privateExponent",prime1:"prime1",prime2:"prime2",exponent1:"exponent1",exponent2:"exponent2",coefficient:"coefficient",otherPrimeInfo:{names:{blockName:"otherPrimeInfos"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPrivateKey");this.version=t.result.version.valueBlock.valueDec,this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent,this.privateExponent=t.result.privateExponent.convertFromDER(256),this.prime1=t.result.prime1.convertFromDER(128),this.prime2=t.result.prime2.convertFromDER(128),this.exponent1=t.result.exponent1.convertFromDER(128),this.exponent2=t.result.exponent2.convertFromDER(128),this.coefficient=t.result.coefficient.convertFromDER(128),"otherPrimeInfos"in t.result&&(this.otherPrimeInfos=Array.from(t.result.otherPrimeInfos,(e=>new et({schema:e}))))}toSchema(){const e=[];return e.push(new ce({value:this.version})),e.push(this.modulus.convertToDER()),e.push(this.publicExponent),e.push(this.privateExponent.convertToDER()),e.push(this.prime1.convertToDER()),e.push(this.prime2.convertToDER()),e.push(this.exponent1.convertToDER()),e.push(this.exponent2.convertToDER()),e.push(this.coefficient.convertToDER()),"otherPrimeInfos"in this&&e.push(new te({value:Array.from(this.otherPrimeInfos,(e=>e.toSchema()))})),new te({value:e})}toJSON(){const e={n:m(g(this.modulus.valueBlock.valueHex),!0,!0,!0),e:m(g(this.publicExponent.valueBlock.valueHex),!0,!0,!0),d:m(g(this.privateExponent.valueBlock.valueHex),!0,!0,!0),p:m(g(this.prime1.valueBlock.valueHex),!0,!0,!0),q:m(g(this.prime2.valueBlock.valueHex),!0,!0,!0),dp:m(g(this.exponent1.valueBlock.valueHex),!0,!0,!0),dq:m(g(this.exponent2.valueBlock.valueHex),!0,!0,!0),qi:m(g(this.coefficient.valueBlock.valueHex),!0,!0,!0)};return"otherPrimeInfos"in this&&(e.oth=Array.from(this.otherPrimeInfos,(e=>e.toJSON()))),e}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');if(this.modulus=new ce({valueHex:d(f(e.n,!0,!0))}),!("e"in e))throw new Error('Absent mandatory parameter "e"');if(this.publicExponent=new ce({valueHex:d(f(e.e,!0,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.privateExponent=new ce({valueHex:d(f(e.d,!0,!0))}),!("p"in e))throw new Error('Absent mandatory parameter "p"');if(this.prime1=new ce({valueHex:d(f(e.p,!0,!0))}),!("q"in e))throw new Error('Absent mandatory parameter "q"');if(this.prime2=new ce({valueHex:d(f(e.q,!0,!0))}),!("dp"in e))throw new Error('Absent mandatory parameter "dp"');if(this.exponent1=new ce({valueHex:d(f(e.dp,!0,!0))}),!("dq"in e))throw new Error('Absent mandatory parameter "dq"');if(this.exponent2=new ce({valueHex:d(f(e.dq,!0,!0))}),!("qi"in e))throw new Error('Absent mandatory parameter "qi"');this.coefficient=new ce({valueHex:d(f(e.qi,!0,!0))}),"oth"in e&&(this.otherPrimeInfos=Array.from(e.oth,(e=>new et({json:e}))))}}class rt{constructor(t={}){this.version=e(t,"version",rt.defaultValues("version")),this.privateKeyAlgorithm=e(t,"privateKeyAlgorithm",rt.defaultValues("privateKeyAlgorithm")),this.privateKey=e(t,"privateKey",rt.defaultValues("privateKey")),"attributes"in t&&(this.attributes=e(t,"attributes",rt.defaultValues("attributes"))),"parsedKey"in t&&(this.parsedKey=e(t,"parsedKey",rt.defaultValues("parsedKey"))),"schema"in t&&this.fromSchema(t.schema),"json"in t&&this.fromJSON(t.json)}static defaultValues(e){switch(e){case"version":return 0;case"privateKeyAlgorithm":return new Ge;case"privateKey":return new ae;case"attributes":return[];case"parsedKey":return{};default:throw new Error(`Invalid member name for PrivateKeyInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ce({name:r.version||""}),Ge.schema(r.privateKeyAlgorithm||{}),new ae({name:r.privateKey||""}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Fe({name:r.attributes||"",value:Ye.schema()})]})]})}fromSchema(e){b(e,["version","privateKeyAlgorithm","privateKey","attributes"]);const t=We(e,e,rt.schema({names:{version:"version",privateKeyAlgorithm:{names:{blockName:"privateKeyAlgorithm"}},privateKey:"privateKey",attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PrivateKeyInfo");switch(this.version=t.result.version.valueBlock.valueDec,this.privateKeyAlgorithm=new Ge({schema:t.result.privateKeyAlgorithm}),this.privateKey=t.result.privateKey,"attributes"in t.result&&(this.attributes=Array.from(t.result.attributes,(e=>new Ye({schema:e})))),this.privateKeyAlgorithm.algorithmId){case"1.2.840.113549.1.1.1":{const e=qe(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new tt({schema:e.result}))}break;case"1.2.840.10045.2.1":if("algorithmParams"in this.privateKeyAlgorithm&&this.privateKeyAlgorithm.algorithmParams instanceof fe){const e=qe(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new Xe({namedCurve:this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),schema:e.result}))}}}toSchema(){const e=[new ce({value:this.version}),this.privateKeyAlgorithm.toSchema(),this.privateKey];return"attributes"in this&&e.push(new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes,(e=>e.toSchema()))})),new te({value:e})}toJSON(){if("parsedKey"in this==!1){const e={version:this.version,privateKeyAlgorithm:this.privateKeyAlgorithm.toJSON(),privateKey:this.privateKey.toJSON()};return"attributes"in this&&(e.attributes=Array.from(this.attributes,(e=>e.toJSON()))),e}const e={};switch(this.privateKeyAlgorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Xe({json:e}),this.privateKeyAlgorithm=new Ge({algorithmId:"1.2.840.10045.2.1",algorithmParams:new fe({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new tt({json:e}),this.privateKeyAlgorithm=new Ge({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new se});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.privateKey=new ae({valueHex:this.parsedKey.toSchema().toBER(!1)})}}}class st{constructor(t={}){if(this.contentType=e(t,"contentType",st.defaultValues("contentType")),this.contentEncryptionAlgorithm=e(t,"contentEncryptionAlgorithm",st.defaultValues("contentEncryptionAlgorithm")),"encryptedContent"in t&&(this.encryptedContent=t.encryptedContent,1===this.encryptedContent.idBlock.tagClass&&4===this.encryptedContent.idBlock.tagNumber&&!1===this.encryptedContent.idBlock.isConstructed)){const e=new ae({idBlock:{isConstructed:!0},isConstructed:!0});let t=0,r=this.encryptedContent.valueBlock.valueHex.byteLength;for(;r>0;){const s=new Uint8Array(this.encryptedContent.valueBlock.valueHex,t,t+1024>this.encryptedContent.valueBlock.valueHex.byteLength?this.encryptedContent.valueBlock.valueHex.byteLength-t:1024),i=new ArrayBuffer(s.length),a=new Uint8Array(i);for(let e=0;e<a.length;e++)a[e]=s[e];e.valueBlock.value.push(new ae({valueHex:i})),r-=s.length,t+=s.length}this.encryptedContent=e}"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"contentType":return"";case"contentEncryptionAlgorithm":return new Ge;case"encryptedContent":return new ae;default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"contentType":return""===t;case"contentEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"encryptedContent":return t.isEqual(st.defaultValues(e));default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.contentType||""}),Ge.schema(r.contentEncryptionAlgorithm||{}),new Je({value:[new z({name:r.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0},value:[new Fe({value:new ae})]}),new G({name:r.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0}})]})]})}fromSchema(e){b(e,["contentType","contentEncryptionAlgorithm","encryptedContent"]);const t=We(e,e,st.schema({names:{contentType:"contentType",contentEncryptionAlgorithm:{names:{blockName:"contentEncryptionAlgorithm"}},encryptedContent:"encryptedContent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for EncryptedContentInfo");this.contentType=t.result.contentType.valueBlock.toString(),this.contentEncryptionAlgorithm=new Ge({schema:t.result.contentEncryptionAlgorithm}),"encryptedContent"in t.result&&(this.encryptedContent=t.result.encryptedContent,this.encryptedContent.idBlock.tagClass=1,this.encryptedContent.idBlock.tagNumber=4)}toSchema(){const e={isIndefiniteForm:!1},t=[];if(t.push(new fe({value:this.contentType})),t.push(this.contentEncryptionAlgorithm.toSchema()),"encryptedContent"in this){e.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed;const r=this.encryptedContent;r.idBlock.tagClass=3,r.idBlock.tagNumber=0,r.lenBlock.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed,t.push(r)}return new te({lenBlock:e,value:t})}toJSON(){const e={contentType:this.contentType,contentEncryptionAlgorithm:this.contentEncryptionAlgorithm.toJSON()};return"encryptedContent"in this&&(e.encryptedContent=this.encryptedContent.toJSON()),e}}class it{constructor(t={}){this.hashAlgorithm=e(t,"hashAlgorithm",it.defaultValues("hashAlgorithm")),this.maskGenAlgorithm=e(t,"maskGenAlgorithm",it.defaultValues("maskGenAlgorithm")),this.saltLength=e(t,"saltLength",it.defaultValues("saltLength")),this.trailerField=e(t,"trailerField",it.defaultValues("trailerField")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new Ge({algorithmId:"1.3.14.3.2.26",algorithmParams:new se});case"maskGenAlgorithm":return new Ge({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:new Ge({algorithmId:"1.3.14.3.2.26",algorithmParams:new se}).toSchema()});case"saltLength":return 20;case"trailerField":return 1;default:throw new Error(`Invalid member name for RSASSAPSSParams class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new z({idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[Ge.schema(r.hashAlgorithm||{})]}),new z({idBlock:{tagClass:3,tagNumber:1},optional:!0,value:[Ge.schema(r.maskGenAlgorithm||{})]}),new z({idBlock:{tagClass:3,tagNumber:2},optional:!0,value:[new ce({name:r.saltLength||""})]}),new z({idBlock:{tagClass:3,tagNumber:3},optional:!0,value:[new ce({name:r.trailerField||""})]})]})}fromSchema(e){b(e,["hashAlgorithm","maskGenAlgorithm","saltLength","trailerField"]);const t=We(e,e,it.schema({names:{hashAlgorithm:{names:{blockName:"hashAlgorithm"}},maskGenAlgorithm:{names:{blockName:"maskGenAlgorithm"}},saltLength:"saltLength",trailerField:"trailerField"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSASSAPSSParams");"hashAlgorithm"in t.result&&(this.hashAlgorithm=new Ge({schema:t.result.hashAlgorithm})),"maskGenAlgorithm"in t.result&&(this.maskGenAlgorithm=new Ge({schema:t.result.maskGenAlgorithm})),"saltLength"in t.result&&(this.saltLength=t.result.saltLength.valueBlock.valueDec),"trailerField"in t.result&&(this.trailerField=t.result.trailerField.valueBlock.valueDec)}toSchema(){const e=[];return this.hashAlgorithm.isEqual(it.defaultValues("hashAlgorithm"))||e.push(new z({idBlock:{tagClass:3,tagNumber:0},value:[this.hashAlgorithm.toSchema()]})),this.maskGenAlgorithm.isEqual(it.defaultValues("maskGenAlgorithm"))||e.push(new z({idBlock:{tagClass:3,tagNumber:1},value:[this.maskGenAlgorithm.toSchema()]})),this.saltLength!==it.defaultValues("saltLength")&&e.push(new z({idBlock:{tagClass:3,tagNumber:2},value:[new ce({value:this.saltLength})]})),this.trailerField!==it.defaultValues("trailerField")&&e.push(new z({idBlock:{tagClass:3,tagNumber:3},value:[new ce({value:this.trailerField})]})),new te({value:e})}toJSON(){const e={};return this.hashAlgorithm.isEqual(it.defaultValues("hashAlgorithm"))||(e.hashAlgorithm=this.hashAlgorithm.toJSON()),this.maskGenAlgorithm.isEqual(it.defaultValues("maskGenAlgorithm"))||(e.maskGenAlgorithm=this.maskGenAlgorithm.toJSON()),this.saltLength!==it.defaultValues("saltLength")&&(e.saltLength=this.saltLength),this.trailerField!==it.defaultValues("trailerField")&&(e.trailerField=this.trailerField),e}}class at{constructor(t={}){this.salt=e(t,"salt",at.defaultValues("salt")),this.iterationCount=e(t,"iterationCount",at.defaultValues("iterationCount")),"keyLength"in t&&(this.keyLength=e(t,"keyLength",at.defaultValues("keyLength"))),"prf"in t&&(this.prf=e(t,"prf",at.defaultValues("prf"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"salt":return{};case"iterationCount":return-1;case"keyLength":return 0;case"prf":return new Ge({algorithmId:"1.3.14.3.2.26",algorithmParams:new se});default:throw new Error(`Invalid member name for PBKDF2Params class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Je({value:[new ae({name:r.saltPrimitive||""}),Ge.schema(r.saltConstructed||{})]}),new ce({name:r.iterationCount||""}),new ce({name:r.keyLength||"",optional:!0}),Ge.schema(r.prf||{names:{optional:!0}})]})}fromSchema(e){b(e,["salt","iterationCount","keyLength","prf"]);const t=We(e,e,at.schema({names:{saltPrimitive:"salt",saltConstructed:{names:{blockName:"salt"}},iterationCount:"iterationCount",keyLength:"keyLength",prf:{names:{blockName:"prf",optional:!0}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBKDF2Params");this.salt=t.result.salt,this.iterationCount=t.result.iterationCount.valueBlock.valueDec,"keyLength"in t.result&&(this.keyLength=t.result.keyLength.valueBlock.valueDec),"prf"in t.result&&(this.prf=new Ge({schema:t.result.prf}))}toSchema(){const e=[];return e.push(this.salt),e.push(new ce({value:this.iterationCount})),"keyLength"in this&&at.defaultValues("keyLength")!==this.keyLength&&e.push(new ce({value:this.keyLength})),"prf"in this&&!1===at.defaultValues("prf").isEqual(this.prf)&&e.push(this.prf.toSchema()),new te({value:e})}toJSON(){const e={salt:this.salt.toJSON(),iterationCount:this.iterationCount};return"keyLength"in this&&at.defaultValues("keyLength")!==this.keyLength&&(e.keyLength=this.keyLength),"prf"in this&&!1===at.defaultValues("prf").isEqual(this.prf)&&(e.prf=this.prf.toJSON()),e}}class nt{constructor(t={}){this.keyDerivationFunc=e(t,"keyDerivationFunc",nt.defaultValues("keyDerivationFunc")),this.encryptionScheme=e(t,"encryptionScheme",nt.defaultValues("encryptionScheme")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"keyDerivationFunc":case"encryptionScheme":return new Ge;default:throw new Error(`Invalid member name for PBES2Params class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[Ge.schema(r.keyDerivationFunc||{}),Ge.schema(r.encryptionScheme||{})]})}fromSchema(e){b(e,["keyDerivationFunc","encryptionScheme"]);const t=We(e,e,nt.schema({names:{keyDerivationFunc:{names:{blockName:"keyDerivationFunc"}},encryptionScheme:{names:{blockName:"encryptionScheme"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBES2Params");this.keyDerivationFunc=new Ge({schema:t.result.keyDerivationFunc}),this.encryptionScheme=new Ge({schema:t.result.encryptionScheme})}toSchema(){return new te({value:[this.keyDerivationFunc.toSchema(),this.encryptionScheme.toSchema()]})}toJSON(){return{keyDerivationFunc:this.keyDerivationFunc.toJSON(),encryptionScheme:this.encryptionScheme.toJSON()}}}function ot(e,t,r,s,i,a){let n,o;const l=[];switch(t.toUpperCase()){case"SHA-1":n=20,o=64;break;case"SHA-256":n=32,o=64;break;case"SHA-384":n=48,o=128;break;case"SHA-512":n=64,o=128;break;default:throw new Error("Unsupported hashing algorithm")}const c=new Uint8Array(s),h=new ArrayBuffer(2*s.byteLength+2),u=new Uint8Array(h);for(let e=0;e<c.length;e++)u[2*e]=0,u[2*e+1]=c[e];u[u.length-2]=0,u[u.length-1]=0,s=h.slice(0);const m=new ArrayBuffer(o),f=new Uint8Array(m);for(let e=0;e<m.byteLength;e++)f[e]=3;const g=i.byteLength,d=o*Math.ceil(g/o),p=new ArrayBuffer(d),y=new Uint8Array(p),b=new Uint8Array(i);for(let e=0;e<d;e++)y[e]=b[e%g];const v=s.byteLength,w=o*Math.ceil(v/o),k=new ArrayBuffer(w),A=new Uint8Array(k),B=new Uint8Array(s);for(let e=0;e<w;e++)A[e]=B[e%v];const S=p.byteLength+k.byteLength;let C=new ArrayBuffer(S),N=new Uint8Array(C);N.set(y),N.set(A,y.length);const x=Math.ceil((r>>3)/n);let P=Promise.resolve(C);for(let r=0;r<=x;r++){P=P.then((e=>{const t=new ArrayBuffer(m.byteLength+e.byteLength),r=new Uint8Array(t);return r.set(f),r.set(N,f.length),t}));for(let r=0;r<a;r++)P=P.then((r=>e.digest({name:t},new Uint8Array(r))));P=P.then((e=>{const t=new ArrayBuffer(o),r=new Uint8Array(t);for(let s=0;s<t.byteLength;s++)r[s]=e[s%e.length];const s=Math.ceil(g/o)+Math.ceil(v/o),i=[];let a=0,n=o;for(let e=0;e<s;e++){const e=Array.from(new Uint8Array(C.slice(a,a+n)));a+=o,a+o>C.byteLength&&(n=C.byteLength-a);let s=511;for(let i=t.byteLength-1;i>=0;i--)s>>=8,s+=r[i]+e[i],e[i]=255&s;i.push(...e)}return C=new ArrayBuffer(i.length),N=new Uint8Array(C),N.set(i),l.push(...new Uint8Array(e)),C}))}return P=P.then((()=>{const e=new ArrayBuffer(r>>3);return new Uint8Array(e).set(new Uint8Array(l).slice(0,r>>3)),e})),P}class lt{constructor(t={}){this.crypto=e(t,"crypto",{}),this.subtle=e(t,"subtle",{}),this.name=e(t,"name","")}importKey(e,t,r,s,i){let a={};switch(t instanceof Uint8Array&&(t=t.buffer),e.toLowerCase()){case"raw":return this.subtle.importKey("raw",t,r,s,i);case"spki":{const e=qe(t);if(-1===e.offset)return Promise.reject("Incorrect keyData");const n=new Ze;try{n.fromSchema(e.result)}catch(e){return Promise.reject("Incorrect keyData")}switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="PS1";break;case"SHA-256":a.alg="PS256";break;case"SHA-384":a.alg="PS384";break;case"SHA-512":a.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(i=["verify"],a.kty="RSA",a.ext=s,a.key_ops=i,"1.2.840.113549.1.1.1"!==n.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${n.algorithm.algorithmId}`);if("alg"in a==!1)switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="RS1";break;case"SHA-256":a.alg="RS256";break;case"SHA-384":a.alg="RS384";break;case"SHA-512":a.alg="RS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const e=n.toJSON();for(const t of Object.keys(e))a[t]=e[t]}break;case"ECDSA":i=["verify"];case"ECDH":{if(a={kty:"EC",ext:s,key_ops:i},"1.2.840.10045.2.1"!==n.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${n.algorithm.algorithmId}`);const e=n.toJSON();for(const t of Object.keys(e))a[t]=e[t]}break;case"RSA-OAEP":{if(a.kty="RSA",a.ext=s,a.key_ops=i,"safari"===this.name.toLowerCase())a.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="RSA-OAEP";break;case"SHA-256":a.alg="RSA-OAEP-256";break;case"SHA-384":a.alg="RSA-OAEP-384";break;case"SHA-512":a.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const e=n.toJSON();for(const t of Object.keys(e))a[t]=e[t]}break;case"RSAES-PKCS1-V1_5":{a.kty="RSA",a.ext=s,a.key_ops=i,a.alg="PS1";const e=n.toJSON();for(const t of Object.keys(e))a[t]=e[t]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"pkcs8":{const e=new rt,n=qe(t);if(-1===n.offset)return Promise.reject("Incorrect keyData");try{e.fromSchema(n.result)}catch(e){return Promise.reject("Incorrect keyData")}if("parsedKey"in e==!1)return Promise.reject("Incorrect keyData");switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="PS1";break;case"SHA-256":a.alg="PS256";break;case"SHA-384":a.alg="PS384";break;case"SHA-512":a.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(i=["sign"],a.kty="RSA",a.ext=s,a.key_ops=i,"1.2.840.113549.1.1.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect private key algorithm: ${e.privateKeyAlgorithm.algorithmId}`);if("alg"in a==!1)switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="RS1";break;case"SHA-256":a.alg="RS256";break;case"SHA-384":a.alg="RS384";break;case"SHA-512":a.alg="RS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))a[e]=t[e]}break;case"ECDSA":i=["sign"];case"ECDH":{if(a={kty:"EC",ext:s,key_ops:i},"1.2.840.10045.2.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect algorithm: ${e.privateKeyAlgorithm.algorithmId}`);const t=e.toJSON();for(const e of Object.keys(t))a[e]=t[e]}break;case"RSA-OAEP":{if(a.kty="RSA",a.ext=s,a.key_ops=i,"safari"===this.name.toLowerCase())a.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":a.alg="RSA-OAEP";break;case"SHA-256":a.alg="RSA-OAEP-256";break;case"SHA-384":a.alg="RSA-OAEP-384";break;case"SHA-512":a.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))a[e]=t[e]}break;case"RSAES-PKCS1-V1_5":{i=["decrypt"],a.kty="RSA",a.ext=s,a.key_ops=i,a.alg="PS1";const t=e.toJSON();for(const e of Object.keys(t))a[e]=t[e]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"jwk":a=t;break;default:return Promise.reject(`Incorrect format: ${e}`)}return"safari"===this.name.toLowerCase()?Promise.resolve().then((()=>this.subtle.importKey("jwk",d(JSON.stringify(a)),r,s,i))).then((e=>e),(()=>this.subtle.importKey("jwk",a,r,s,i))):this.subtle.importKey("jwk",a,r,s,i)}exportKey(e,t){let r=this.subtle.exportKey("jwk",t);switch("safari"===this.name.toLowerCase()&&(r=r.then((e=>e instanceof ArrayBuffer?JSON.parse(g(e)):e))),e.toLowerCase()){case"raw":return this.subtle.exportKey("raw",t);case"spki":r=r.then((e=>{const t=new Ze;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)}));break;case"pkcs8":r=r.then((e=>{const t=new rt;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)}));break;case"jwk":break;default:return Promise.reject(`Incorrect format: ${e}`)}return r}convert(e,t,r,s,i,a){switch(e.toLowerCase()){case"raw":switch(t.toLowerCase()){case"raw":return Promise.resolve(r);case"spki":return Promise.resolve().then((()=>this.importKey("raw",r,s,i,a))).then((e=>this.exportKey("spki",e)));case"pkcs8":return Promise.resolve().then((()=>this.importKey("raw",r,s,i,a))).then((e=>this.exportKey("pkcs8",e)));case"jwk":return Promise.resolve().then((()=>this.importKey("raw",r,s,i,a))).then((e=>this.exportKey("jwk",e)));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"spki":switch(t.toLowerCase()){case"raw":return Promise.resolve().then((()=>this.importKey("spki",r,s,i,a))).then((e=>this.exportKey("raw",e)));case"spki":return Promise.resolve(r);case"pkcs8":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"jwk":return Promise.resolve().then((()=>this.importKey("spki",r,s,i,a))).then((e=>this.exportKey("jwk",e)));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"pkcs8":switch(t.toLowerCase()){case"raw":return Promise.resolve().then((()=>this.importKey("pkcs8",r,s,i,a))).then((e=>this.exportKey("raw",e)));case"spki":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"pkcs8":return Promise.resolve(r);case"jwk":return Promise.resolve().then((()=>this.importKey("pkcs8",r,s,i,a))).then((e=>this.exportKey("jwk",e)));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"jwk":switch(t.toLowerCase()){case"raw":return Promise.resolve().then((()=>this.importKey("jwk",r,s,i,a))).then((e=>this.exportKey("raw",e)));case"spki":return Promise.resolve().then((()=>this.importKey("jwk",r,s,i,a))).then((e=>this.exportKey("spki",e)));case"pkcs8":return Promise.resolve().then((()=>this.importKey("jwk",r,s,i,a))).then((e=>this.exportKey("pkcs8",e)));case"jwk":return Promise.resolve(r);default:return Promise.reject(`Incorrect outputFormat: ${t}`)}default:return Promise.reject(`Incorrect inputFormat: ${e}`)}}encrypt(...e){return this.subtle.encrypt(...e)}decrypt(...e){return this.subtle.decrypt(...e)}sign(...e){return this.subtle.sign(...e)}verify(...e){return this.subtle.verify(...e)}digest(...e){return this.subtle.digest(...e)}generateKey(...e){return this.subtle.generateKey(...e)}deriveKey(...e){return this.subtle.deriveKey(...e)}deriveBits(...e){return this.subtle.deriveBits(...e)}wrapKey(...e){return this.subtle.wrapKey(...e)}unwrapKey(...e){return this.subtle.unwrapKey(...e)}getRandomValues(e){if("getRandomValues"in this.crypto==!1)throw new Error("No support for getRandomValues");return this.crypto.getRandomValues(e)}getAlgorithmByOID(e){switch(e){case"1.2.840.113549.1.1.1":return{name:"RSAES-PKCS1-v1_5"};case"1.2.840.113549.1.1.5":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-1"}};case"1.2.840.113549.1.1.11":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"1.2.840.113549.1.1.12":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}};case"1.2.840.113549.1.1.13":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}};case"1.2.840.113549.1.1.10":return{name:"RSA-PSS"};case"1.2.840.113549.1.1.7":return{name:"RSA-OAEP"};case"1.2.840.10045.2.1":case"1.2.840.10045.4.1":return{name:"ECDSA",hash:{name:"SHA-1"}};case"1.2.840.10045.4.3.2":return{name:"ECDSA",hash:{name:"SHA-256"}};case"1.2.840.10045.4.3.3":return{name:"ECDSA",hash:{name:"SHA-384"}};case"1.2.840.10045.4.3.4":return{name:"ECDSA",hash:{name:"SHA-512"}};case"1.3.133.16.840.63.0.2":return{name:"ECDH",kdf:"SHA-1"};case"1.3.132.1.11.1":return{name:"ECDH",kdf:"SHA-256"};case"1.3.132.1.11.2":return{name:"ECDH",kdf:"SHA-384"};case"1.3.132.1.11.3":return{name:"ECDH",kdf:"SHA-512"};case"2.16.840.1.101.3.4.1.2":return{name:"AES-CBC",length:128};case"2.16.840.1.101.3.4.1.22":return{name:"AES-CBC",length:192};case"2.16.840.1.101.3.4.1.42":return{name:"AES-CBC",length:256};case"2.16.840.1.101.3.4.1.6":return{name:"AES-GCM",length:128};case"2.16.840.1.101.3.4.1.26":return{name:"AES-GCM",length:192};case"2.16.840.1.101.3.4.1.46":return{name:"AES-GCM",length:256};case"2.16.840.1.101.3.4.1.4":return{name:"AES-CFB",length:128};case"2.16.840.1.101.3.4.1.24":return{name:"AES-CFB",length:192};case"2.16.840.1.101.3.4.1.44":return{name:"AES-CFB",length:256};case"2.16.840.1.101.3.4.1.5":return{name:"AES-KW",length:128};case"2.16.840.1.101.3.4.1.25":return{name:"AES-KW",length:192};case"2.16.840.1.101.3.4.1.45":return{name:"AES-KW",length:256};case"1.2.840.113549.2.7":return{name:"HMAC",hash:{name:"SHA-1"}};case"1.2.840.113549.2.9":return{name:"HMAC",hash:{name:"SHA-256"}};case"1.2.840.113549.2.10":return{name:"HMAC",hash:{name:"SHA-384"}};case"1.2.840.113549.2.11":return{name:"HMAC",hash:{name:"SHA-512"}};case"1.2.840.113549.1.9.16.3.5":return{name:"DH"};case"1.3.14.3.2.26":return{name:"SHA-1"};case"2.16.840.1.101.3.4.2.1":return{name:"SHA-256"};case"2.16.840.1.101.3.4.2.2":return{name:"SHA-384"};case"2.16.840.1.101.3.4.2.3":return{name:"SHA-512"};case"1.2.840.113549.1.5.12":return{name:"PBKDF2"};case"1.2.840.10045.3.1.7":return{name:"P-256"};case"1.3.132.0.34":return{name:"P-384"};case"1.3.132.0.35":return{name:"P-521"}}return{}}getOIDByAlgorithm(e){let t="";switch(e.name.toUpperCase()){case"RSAES-PKCS1-V1_5":t="1.2.840.113549.1.1.1";break;case"RSASSA-PKCS1-V1_5":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.1.1.5";break;case"SHA-256":t="1.2.840.113549.1.1.11";break;case"SHA-384":t="1.2.840.113549.1.1.12";break;case"SHA-512":t="1.2.840.113549.1.1.13"}break;case"RSA-PSS":t="1.2.840.113549.1.1.10";break;case"RSA-OAEP":t="1.2.840.113549.1.1.7";break;case"ECDSA":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.10045.4.1";break;case"SHA-256":t="1.2.840.10045.4.3.2";break;case"SHA-384":t="1.2.840.10045.4.3.3";break;case"SHA-512":t="1.2.840.10045.4.3.4"}break;case"ECDH":switch(e.kdf.toUpperCase()){case"SHA-1":t="1.3.133.16.840.63.0.2";break;case"SHA-256":t="1.3.132.1.11.1";break;case"SHA-384":t="1.3.132.1.11.2";break;case"SHA-512":t="1.3.132.1.11.3"}break;case"AES-CTR":case"AES-CMAC":case"CONCAT":case"HKDF":break;case"AES-CBC":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.2";break;case 192:t="2.16.840.1.101.3.4.1.22";break;case 256:t="2.16.840.1.101.3.4.1.42"}break;case"AES-GCM":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.6";break;case 192:t="2.16.840.1.101.3.4.1.26";break;case 256:t="2.16.840.1.101.3.4.1.46"}break;case"AES-CFB":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.4";break;case 192:t="2.16.840.1.101.3.4.1.24";break;case 256:t="2.16.840.1.101.3.4.1.44"}break;case"AES-KW":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.5";break;case 192:t="2.16.840.1.101.3.4.1.25";break;case 256:t="2.16.840.1.101.3.4.1.45"}break;case"HMAC":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.2.7";break;case"SHA-256":t="1.2.840.113549.2.9";break;case"SHA-384":t="1.2.840.113549.2.10";break;case"SHA-512":t="1.2.840.113549.2.11"}break;case"DH":t="1.2.840.113549.1.9.16.3.5";break;case"SHA-1":t="1.3.14.3.2.26";break;case"SHA-256":t="2.16.840.1.101.3.4.2.1";break;case"SHA-384":t="2.16.840.1.101.3.4.2.2";break;case"SHA-512":t="2.16.840.1.101.3.4.2.3";break;case"PBKDF2":t="1.2.840.113549.1.5.12";break;case"P-256":t="1.2.840.10045.3.1.7";break;case"P-384":t="1.3.132.0.34";break;case"P-521":t="1.3.132.0.35"}return t}getAlgorithmParameters(e,t){let r={algorithm:{},usages:[]};switch(e.toUpperCase()){case"RSAES-PKCS1-V1_5":case"RSASSA-PKCS1-V1_5":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["sign","verify"]};break;case"verify":case"sign":case"importkey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},usages:["verify"]};break;default:return{algorithm:{name:"RSASSA-PKCS1-v1_5"},usages:[]}}break;case"RSA-PSS":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"},saltLength:20},usages:["sign","verify"]};break;case"generatekey":r={algorithm:{name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-1"}},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"}},usages:["verify"]};break;default:return{algorithm:{name:"RSA-PSS"},usages:[]}}break;case"RSA-OAEP":switch(t.toLowerCase()){case"encrypt":case"decrypt":r={algorithm:{name:"RSA-OAEP"},usages:["encrypt","decrypt"]};break;case"generatekey":r={algorithm:{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"importkey":r={algorithm:{name:"RSA-OAEP",hash:{name:"SHA-256"}},usages:["encrypt"]};break;default:return{algorithm:{name:"RSA-OAEP"},usages:[]}}break;case"ECDSA":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["verify"]};break;case"verify":case"sign":r={algorithm:{name:"ECDSA",hash:{name:"SHA-256"}},usages:["sign"]};break;default:return{algorithm:{name:"ECDSA"},usages:[]}}break;case"ECDH":switch(t.toLowerCase()){case"exportkey":case"importkey":case"generatekey":r={algorithm:{name:"ECDH",namedCurve:"P-256"},usages:["deriveKey","deriveBits"]};break;case"derivekey":case"derivebits":r={algorithm:{name:"ECDH",namedCurve:"P-256",public:[]},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"ECDH"},usages:[]}}break;case"AES-CTR":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CTR",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CTR",counter:new Uint8Array(16),length:10},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CTR"},usages:[]}}break;case"AES-CBC":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CBC",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CBC",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CBC"},usages:[]}}break;case"AES-GCM":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-GCM",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-GCM",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-GCM"},usages:[]}}break;case"AES-KW":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":case"wrapkey":case"unwrapkey":r={algorithm:{name:"AES-KW",length:256},usages:["wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-KW"},usages:[]}}break;case"HMAC":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"HMAC"},usages:["sign","verify"]};break;case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"HMAC",length:32,hash:{name:"SHA-256"}},usages:["sign","verify"]};break;default:return{algorithm:{name:"HMAC"},usages:[]}}break;case"HKDF":if("derivekey"!==t.toLowerCase())return{algorithm:{name:"HKDF"},usages:[]};r={algorithm:{name:"HKDF",hash:"SHA-256",salt:new Uint8Array([]),info:new Uint8Array([])},usages:["encrypt","decrypt"]};break;case"PBKDF2":if("derivekey"!==t.toLowerCase())return{algorithm:{name:"PBKDF2"},usages:[]};r={algorithm:{name:"PBKDF2",hash:{name:"SHA-256"},salt:new Uint8Array([]),iterations:1e4},usages:["encrypt","decrypt"]}}return r}getHashAlgorithm(e){let t="";switch(e.algorithmId){case"1.2.840.10045.4.1":case"1.2.840.113549.1.1.5":t="SHA-1";break;case"1.2.840.10045.4.3.2":case"1.2.840.113549.1.1.11":t="SHA-256";break;case"1.2.840.10045.4.3.3":case"1.2.840.113549.1.1.12":t="SHA-384";break;case"1.2.840.10045.4.3.4":case"1.2.840.113549.1.1.13":t="SHA-512";break;case"1.2.840.113549.1.1.10":try{const r=new it({schema:e.algorithmParams});if("hashAlgorithm"in r){const e=this.getAlgorithmByOID(r.hashAlgorithm.algorithmId);if("name"in e==!1)return"";t=e.name}else t="SHA-1"}catch(e){}}return t}encryptEncryptedContentInfo(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("contentEncryptionAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "contentEncryptionAlgorithm"');if("hmacHashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hmacHashAlgorithm"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("contentToEncrypt"in e==!1)return Promise.reject('Absent mandatory parameter "contentToEncrypt"');if("contentType"in e==!1)return Promise.reject('Absent mandatory parameter "contentType"');const t=this.getOIDByAlgorithm(e.contentEncryptionAlgorithm);if(""===t)return Promise.reject('Wrong "contentEncryptionAlgorithm" value');const r=this.getOIDByAlgorithm({name:"PBKDF2"});if(""===r)return Promise.reject("Can not find OID for PBKDF2");const s=this.getOIDByAlgorithm({name:"HMAC",hash:{name:e.hmacHashAlgorithm}});if(""===s)return Promise.reject(`Incorrect value for "hmacHashAlgorithm": ${e.hmacHashAlgorithm}`);let i=Promise.resolve();const a=new ArrayBuffer(16),n=new Uint8Array(a);this.getRandomValues(n);const o=new ArrayBuffer(64),l=new Uint8Array(o);this.getRandomValues(l);const c=new Uint8Array(e.contentToEncrypt),h=new at({salt:new ae({valueHex:o}),iterationCount:e.iterationCount,prf:new Ge({algorithmId:s,algorithmParams:new se})});return i=i.then((()=>{const t=new Uint8Array(e.password);return this.importKey("raw",t,"PBKDF2",!1,["deriveKey"])}),(e=>Promise.reject(e))),i=i.then((t=>this.deriveKey({name:"PBKDF2",hash:{name:e.hmacHashAlgorithm},salt:l,iterations:e.iterationCount},t,e.contentEncryptionAlgorithm,!1,["encrypt"])),(e=>Promise.reject(e))),i=i.then((t=>this.encrypt({name:e.contentEncryptionAlgorithm.name,iv:n},t,c)),(e=>Promise.reject(e))),i=i.then((s=>{const i=new nt({keyDerivationFunc:new Ge({algorithmId:r,algorithmParams:h.toSchema()}),encryptionScheme:new Ge({algorithmId:t,algorithmParams:new ae({valueHex:a})})});return new st({contentType:e.contentType,contentEncryptionAlgorithm:new Ge({algorithmId:"1.2.840.113549.1.5.13",algorithmParams:i.toSchema()}),encryptedContent:new ae({valueHex:s})})}),(e=>Promise.reject(e))),i}decryptEncryptedContentInfo(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("encryptedContentInfo"in e==!1)return Promise.reject('Absent mandatory parameter "encryptedContentInfo"');if("1.2.840.113549.1.5.13"!==e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId)return Promise.reject(`Unknown "contentEncryptionAlgorithm": ${e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);let t,r,s=Promise.resolve();try{t=new nt({schema:e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbes2Parameters"')}try{r=new at({schema:t.keyDerivationFunc.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbkdf2Params"')}const i=this.getAlgorithmByOID(t.encryptionScheme.algorithmId);if("name"in i==!1)return Promise.reject(`Incorrect OID for "contentEncryptionAlgorithm": ${t.encryptionScheme.algorithmId}`);const n=t.encryptionScheme.algorithmParams.valueBlock.valueHex,o=new Uint8Array(n),l=r.salt.valueBlock.valueHex,c=new Uint8Array(l),h=r.iterationCount;let u="SHA-1";if("prf"in r){const e=this.getAlgorithmByOID(r.prf.algorithmId);if("name"in e==!1)return Promise.reject("Incorrect OID for HMAC hash algorithm");u=e.hash.name}return s=s.then((()=>this.importKey("raw",e.password,"PBKDF2",!1,["deriveKey"])),(e=>Promise.reject(e))),s=s.then((e=>this.deriveKey({name:"PBKDF2",hash:{name:u},salt:c,iterations:h},e,i,!1,["decrypt"])),(e=>Promise.reject(e))),s=s.then((t=>{let r=new ArrayBuffer(0);if(!1===e.encryptedContentInfo.encryptedContent.idBlock.isConstructed)r=e.encryptedContentInfo.encryptedContent.valueBlock.valueHex;else for(const t of e.encryptedContentInfo.encryptedContent.valueBlock.value)r=a(r,t.valueBlock.valueHex);return this.decrypt({name:i.name,iv:o},t,r)}),(e=>Promise.reject(e))),s}stampDataWithPassword(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "salt"');if("contentToStamp"in e==!1)return Promise.reject('Absent mandatory parameter "contentToStamp"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const s={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=r.then((()=>ot(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))),r=r.then((e=>this.importKey("raw",new Uint8Array(e),s,!1,["sign"]))),r=r.then((t=>this.sign(s,t,new Uint8Array(e.contentToStamp))),(e=>Promise.reject(e))),r}verifyDataStampedWithPassword(e){if(e instanceof Object==!1)return Promise.reject('Parameters must have type "Object"');if("password"in e==!1)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==!1)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==!1)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==!1)return Promise.reject('Absent mandatory parameter "salt"');if("contentToVerify"in e==!1)return Promise.reject('Absent mandatory parameter "contentToVerify"');if("signatureToVerify"in e==!1)return Promise.reject('Absent mandatory parameter "signatureToVerify"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const s={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=r.then((()=>ot(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))),r=r.then((e=>this.importKey("raw",new Uint8Array(e),s,!1,["verify"]))),r=r.then((t=>this.verify(s,t,new Uint8Array(e.signatureToVerify),new Uint8Array(e.contentToVerify))),(e=>Promise.reject(e))),r}getSignatureParameters(e,t="SHA-1"){if(""===this.getOIDByAlgorithm({name:t}))return Promise.reject(`Unsupported hash algorithm: ${t}`);const r=new Ge,s=this.getAlgorithmParameters(e.algorithm.name,"sign");switch(s.algorithm.hash.name=t,e.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":r.algorithmId=this.getOIDByAlgorithm(s.algorithm);break;case"RSA-PSS":{switch(t.toUpperCase()){case"SHA-256":s.algorithm.saltLength=32;break;case"SHA-384":s.algorithm.saltLength=48;break;case"SHA-512":s.algorithm.saltLength=64}const e={};if("SHA-1"!==t.toUpperCase()){const r=this.getOIDByAlgorithm({name:t});if(""===r)return Promise.reject(`Unsupported hash algorithm: ${t}`);e.hashAlgorithm=new Ge({algorithmId:r,algorithmParams:new se}),e.maskGenAlgorithm=new Ge({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:e.hashAlgorithm.toSchema()})}20!==s.algorithm.saltLength&&(e.saltLength=s.algorithm.saltLength);const i=new it(e);r.algorithmId="1.2.840.113549.1.1.10",r.algorithmParams=i.toSchema()}break;default:return Promise.reject(`Unsupported signature algorithm: ${e.algorithm.name}`)}return Promise.resolve().then((()=>({signatureAlgorithm:r,parameters:s})))}signWithPrivateKey(e,t,r){return this.sign(r.algorithm,t,new Uint8Array(e)).then((e=>("ECDSA"===r.algorithm.name&&(e=function(e){if(e.byteLength%2!=0)return new ArrayBuffer(0);const t=e.byteLength/2,r=new ArrayBuffer(t);new Uint8Array(r).set(new Uint8Array(e,0,t));const s=new ce({valueHex:r}),i=new ArrayBuffer(t);new Uint8Array(i).set(new Uint8Array(e,t,t));const a=new ce({valueHex:i});return new te({value:[s.convertToDER(),a.convertToDER()]}).toBER(!1)}(e)),e)),(e=>Promise.reject(`Signing error: ${e}`)))}fillPublicKeyParameters(e,t){const r={},s=this.getHashAlgorithm(t);if(""===s)return Promise.reject(`Unsupported signature algorithm: ${t.algorithmId}`);let i;i="1.2.840.113549.1.1.10"===t.algorithmId?t.algorithmId:e.algorithm.algorithmId;const a=this.getAlgorithmByOID(i);if("name"in a==="")return Promise.reject(`Unsupported public key algorithm: ${t.algorithmId}`);if(r.algorithm=this.getAlgorithmParameters(a.name,"importkey"),"hash"in r.algorithm.algorithm&&(r.algorithm.algorithm.hash.name=s),"ECDSA"===a.name){let t=!1;if("algorithmParams"in e.algorithm==!0&&"idBlock"in e.algorithm.algorithmParams&&1===e.algorithm.algorithmParams.idBlock.tagClass&&6===e.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)return Promise.reject("Incorrect type for ECDSA public key parameters");const s=this.getAlgorithmByOID(e.algorithm.algorithmParams.valueBlock.toString());if("name"in s==!1)return Promise.reject(`Unsupported named curve algorithm: ${e.algorithm.algorithmParams.valueBlock.toString()}`);r.algorithm.algorithm.namedCurve=s.name}return r}getPublicKey(e,t,r=null){null===r&&(r=this.fillPublicKeyParameters(e,t));const s=e.toSchema().toBER(!1),i=new Uint8Array(s);return this.importKey("spki",i,r.algorithm.algorithm,!0,r.algorithm.usages)}verifyWithPublicKey(e,t,r,s,i=null){let n=Promise.resolve();if(null===i){if(""===(i=this.getHashAlgorithm(s)))return Promise.reject(`Unsupported signature algorithm: ${s.algorithmId}`);n=n.then((()=>this.getPublicKey(r,s)))}else{const e={};let t;t="1.2.840.113549.1.1.10"===s.algorithmId?s.algorithmId:r.algorithm.algorithmId;const a=this.getAlgorithmByOID(t);if("name"in a==="")return Promise.reject(`Unsupported public key algorithm: ${s.algorithmId}`);if(e.algorithm=this.getAlgorithmParameters(a.name,"importkey"),"hash"in e.algorithm.algorithm&&(e.algorithm.algorithm.hash.name=i),"ECDSA"===a.name){let t=!1;if("algorithmParams"in r.algorithm==!0&&"idBlock"in r.algorithm.algorithmParams&&1===r.algorithm.algorithmParams.idBlock.tagClass&&6===r.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)return Promise.reject("Incorrect type for ECDSA public key parameters");const s=this.getAlgorithmByOID(r.algorithm.algorithmParams.valueBlock.toString());if("name"in s==!1)return Promise.reject(`Unsupported named curve algorithm: ${r.algorithm.algorithmParams.valueBlock.toString()}`);e.algorithm.algorithm.namedCurve=s.name}n=n.then((()=>this.getPublicKey(r,null,e)))}return n=n.then((r=>{const n=this.getAlgorithmParameters(r.algorithm.name,"verify");"hash"in n.algorithm&&(n.algorithm.hash.name=i);let o=t.valueBlock.valueHex;if("ECDSA"===r.algorithm.name){o=function(e){if(e instanceof te==!1)return new ArrayBuffer(0);if(2!==e.valueBlock.value.length)return new ArrayBuffer(0);if(e.valueBlock.value[0]instanceof ce==!1)return new ArrayBuffer(0);if(e.valueBlock.value[1]instanceof ce==!1)return new ArrayBuffer(0);const t=e.valueBlock.value[0].convertFromDER(),r=e.valueBlock.value[1].convertFromDER();switch(!0){case t.valueBlock.valueHex.byteLength<r.valueBlock.valueHex.byteLength:{if(r.valueBlock.valueHex.byteLength-t.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=r.valueBlock.valueHex.byteLength,s=new Uint8Array(t.valueBlock.valueHex),i=new ArrayBuffer(e),n=new Uint8Array(i);return n.set(s,1),n[0]=0,a(i,r.valueBlock.valueHex)}case t.valueBlock.valueHex.byteLength>r.valueBlock.valueHex.byteLength:{if(t.valueBlock.valueHex.byteLength-r.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=t.valueBlock.valueHex.byteLength,s=new Uint8Array(r.valueBlock.valueHex),i=new ArrayBuffer(e),n=new Uint8Array(i);return n.set(s,1),n[0]=0,a(t.valueBlock.valueHex,i)}default:if(t.valueBlock.valueHex.byteLength%2){const e=t.valueBlock.valueHex.byteLength+1,s=new Uint8Array(t.valueBlock.valueHex),i=new ArrayBuffer(e),n=new Uint8Array(i);n.set(s,1),n[0]=0;const o=new Uint8Array(r.valueBlock.valueHex),l=new ArrayBuffer(e),c=new Uint8Array(l);return c.set(o,1),c[0]=0,a(i,l)}}return a(t.valueBlock.valueHex,r.valueBlock.valueHex)}(qe(o).result)}if("RSA-PSS"===r.algorithm.name){let e;try{e=new it({schema:s.algorithmParams})}catch(e){return Promise.reject(e)}n.algorithm.saltLength="saltLength"in e?e.saltLength:20;let t="SHA-1";if("hashAlgorithm"in e){const r=this.getAlgorithmByOID(e.hashAlgorithm.algorithmId);if("name"in r==!1)return Promise.reject(`Unrecognized hash algorithm: ${e.hashAlgorithm.algorithmId}`);t=r.name}n.algorithm.hash.name=t}return this.verify(n.algorithm,r,new Uint8Array(o),new Uint8Array(e))})),n}}let ct={name:"none",crypto:null,subtle:null};function ht(){if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){let e;try{e=global[process.pid].pkijs.engine}catch(e){throw new Error('Please call "setEngine" before call to "getEngine"')}return e}return ct}function ut(){const e=ht();if(null!==e.subtle)return e.subtle}function mt(e){let t=!1,r="";const s=e.trim();for(let e=0;e<s.length;e++)32===s.charCodeAt(e)?!1===t&&(t=!0):(t&&(r+=" ",t=!1),r+=s[e]);return r.toLowerCase()}!function(){if("undefined"!=typeof self&&"crypto"in self){let e="webcrypto";const t=self.crypto;let r;if("webkitSubtle"in self.crypto){try{r=self.crypto.webkitSubtle}catch(e){r=self.crypto.subtle}e="safari"}"subtle"in self.crypto&&(r=self.crypto.subtle),ct=void 0===r?{name:e,crypto:t,subtle:null}:{name:e,crypto:t,subtle:new lt({name:e,crypto:self.crypto,subtle:r})}}!function(e,t,r){if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){if(void 0===global[process.pid])global[process.pid]={};else if("object"!=typeof global[process.pid])throw new Error(`Name global.${process.pid} already exists and it is not an object`);if(void 0===global[process.pid].pkijs)global[process.pid].pkijs={};else if("object"!=typeof global[process.pid].pkijs)throw new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);global[process.pid].pkijs.engine={name:e,crypto:t,subtle:r}}else ct.name!==e&&(ct={name:e,crypto:t,subtle:r})}(ct.name,ct.crypto,ct.subtle)}();class ft{constructor(t={}){this.type=e(t,"type",ft.defaultValues("type")),this.value=e(t,"value",ft.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return"";case"value":return{};default:throw new Error(`Invalid member name for AttributeTypeAndValue class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.type||""}),new Te({name:r.value||""})]})}static blockName(){return"AttributeTypeAndValue"}fromSchema(e){b(e,["type","typeValue"]);const t=We(e,e,ft.schema({names:{type:"type",value:"typeValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AttributeTypeAndValue");this.type=t.result.type.valueBlock.toString(),this.value=t.result.typeValue}toSchema(){return new te({value:[new fe({value:this.type}),this.value]})}toJSON(){const e={type:this.type};return 0!==Object.keys(this.value).length?e.value=this.value.toJSON():e.value=this.value,e}isEqual(e){const t=[de.blockName(),we.blockName(),Ae.blockName(),Ce.blockName(),Ne.blockName(),xe.blockName(),Pe.blockName(),Ie.blockName(),Ee.blockName(),He.blockName(),Le.blockName(),Oe.blockName()];if(e.constructor.blockName()===ft.blockName()){if(this.type!==e.type)return!1;let r=[!1,!1];const s=this.value.constructor.blockName();for(const i of t)s===i&&(r[0]=!0),e.value.constructor.blockName()===i&&(r[1]=!0);if(r[0]^r[1])return!1;if(r=r[0]&&r[1],r){const t=mt(this.value.valueBlock.value),r=mt(e.value.valueBlock.value);if(0!==t.localeCompare(r))return!1}else if(!1===l(this.value.valueBeforeDecode,e.value.valueBeforeDecode))return!1;return!0}return e instanceof ArrayBuffer&&l(this.value.valueBeforeDecode,e)}}class gt{constructor(t={}){this.typesAndValues=e(t,"typesAndValues",gt.defaultValues("typesAndValues")),this.valueBeforeDecode=e(t,"valueBeforeDecode",gt.defaultValues("valueBeforeDecode")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"typesAndValues":return[];case"valueBeforeDecode":return new ArrayBuffer(0);default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"typesAndValues":return 0===t.length;case"valueBeforeDecode":return 0===t.byteLength;default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.repeatedSequence||"",value:new re({value:[new Fe({name:r.repeatedSet||"",value:ft.schema(r.typeAndValue||{})})]})})]})}fromSchema(e){b(e,["RDN","typesAndValues"]);const t=We(e,e,gt.schema({names:{blockName:"RDN",repeatedSet:"typesAndValues"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RelativeDistinguishedNames");"typesAndValues"in t.result&&(this.typesAndValues=Array.from(t.result.typesAndValues,(e=>new ft({schema:e})))),this.valueBeforeDecode=t.result.RDN.valueBeforeDecode}toSchema(){if(0===this.valueBeforeDecode.byteLength)return new te({value:[new re({value:Array.from(this.typesAndValues,(e=>e.toSchema()))})]});return qe(this.valueBeforeDecode).result}toJSON(){return{typesAndValues:Array.from(this.typesAndValues,(e=>e.toJSON()))}}isEqual(e){if(e instanceof gt){if(this.typesAndValues.length!==e.typesAndValues.length)return!1;for(const[t,r]of this.typesAndValues.entries())if(!1===r.isEqual(e.typesAndValues[t]))return!1;return!0}return e instanceof ArrayBuffer&&l(this.valueBeforeDecode,e)}}function dt(t={},r=!1){const s=e(t,"names",{});return new te({optional:r,value:[new z({optional:!0,idBlock:{tagClass:2,tagNumber:1},name:s.country_name||"",value:[new Je({value:[new Ce,new Ne]})]}),new z({optional:!0,idBlock:{tagClass:2,tagNumber:2},name:s.administration_domain_name||"",value:[new Je({value:[new Ce,new Ne]})]}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:0},name:s.network_address||"",isHexOnly:!0}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:1},name:s.terminal_identifier||"",isHexOnly:!0}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:2},name:s.private_domain_name||"",value:[new Je({value:[new Ce,new Ne]})]}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:3},name:s.organization_name||"",isHexOnly:!0}),new G({optional:!0,name:s.numeric_user_identifier||"",idBlock:{tagClass:3,tagNumber:4},isHexOnly:!0}),new z({optional:!0,name:s.personal_name||"",idBlock:{tagClass:3,tagNumber:5},value:[new G({idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:1},isHexOnly:!0}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:2},isHexOnly:!0}),new G({optional:!0,idBlock:{tagClass:3,tagNumber:3},isHexOnly:!0})]}),new z({optional:!0,name:s.organizational_unit_names||"",idBlock:{tagClass:3,tagNumber:6},value:[new Fe({value:new Ne})]})]})}function pt(e=!1){return new te({optional:e,value:[new Ne,new Ne]})}function yt(e=!1){return new re({optional:e,value:[new G({optional:!0,idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new Te]})]})}class bt{constructor(t={}){this.type=e(t,"type",bt.defaultValues("type")),this.value=e(t,"value",bt.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return 9;case"value":return{};default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return t===bt.defaultValues(e);case"value":return 0===Object.keys(t).length;default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new Je({value:[new z({idBlock:{tagClass:3,tagNumber:0},name:r.blockName||"",value:[new fe,new z({idBlock:{tagClass:3,tagNumber:0},value:[new Te]})]}),new G({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:1}}),new G({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:2}}),new z({idBlock:{tagClass:3,tagNumber:3},name:r.blockName||"",value:[dt(r.builtInStandardAttributes||{},!1),pt(!0),yt(!0)]}),new z({idBlock:{tagClass:3,tagNumber:4},name:r.blockName||"",value:[gt.schema(r.directoryName||{})]}),new z({idBlock:{tagClass:3,tagNumber:5},name:r.blockName||"",value:[new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Je({value:[new xe,new Ne,new Ae,new de,new we]})]}),new z({idBlock:{tagClass:3,tagNumber:1},value:[new Je({value:[new xe,new Ne,new Ae,new de,new we]})]})]}),new G({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:6}}),new G({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:7}}),new G({name:r.blockName||"",idBlock:{tagClass:3,tagNumber:8}})]})}fromSchema(e){b(e,["blockName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID"]);const t=We(e,e,bt.schema({names:{blockName:"blockName",otherName:"otherName",rfc822Name:"rfc822Name",dNSName:"dNSName",x400Address:"x400Address",directoryName:{names:{blockName:"directoryName"}},ediPartyName:"ediPartyName",uniformResourceIdentifier:"uniformResourceIdentifier",iPAddress:"iPAddress",registeredID:"registeredID"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralName");switch(this.type=t.result.blockName.idBlock.tagNumber,this.type){case 0:case 3:this.value=t.result.blockName;break;case 1:case 2:case 6:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=22;const r=e.toBER(!1);this.value=qe(r).result.valueBlock.value}break;case 4:this.value=new gt({schema:t.result.directoryName});break;case 5:this.value=t.result.ediPartyName;break;case 7:this.value=new ae({valueHex:t.result.blockName.valueBlock.valueHex});break;case 8:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=6;const r=e.toBER(!1);this.value=qe(r).result.valueBlock.toString()}}}toSchema(){switch(this.type){case 0:case 3:case 5:return new z({idBlock:{tagClass:3,tagNumber:this.type},value:[this.value]});case 1:case 2:case 6:{const e=new Ie({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 4:return new z({idBlock:{tagClass:3,tagNumber:4},value:[this.value.toSchema()]});case 7:{const e=this.value;return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 8:{const e=new fe({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}default:return bt.schema()}}toJSON(){const e={type:this.type,value:""};if("string"==typeof this.value)e.value=this.value;else try{e.value=this.value.toJSON()}catch(e){}return e}}class vt{constructor(t={}){this.accessMethod=e(t,"accessMethod",vt.defaultValues("accessMethod")),this.accessLocation=e(t,"accessLocation",vt.defaultValues("accessLocation")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"accessMethod":return"";case"accessLocation":return new bt;default:throw new Error(`Invalid member name for AccessDescription class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.accessMethod||""}),bt.schema(r.accessLocation||{})]})}fromSchema(e){b(e,["accessMethod","accessLocation"]);const t=We(e,e,vt.schema({names:{accessMethod:"accessMethod",accessLocation:{names:{blockName:"accessLocation"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AccessDescription");this.accessMethod=t.result.accessMethod.valueBlock.toString(),this.accessLocation=new bt({schema:t.result.accessLocation})}toSchema(){return new te({value:[new fe({value:this.accessMethod}),this.accessLocation.toSchema()]})}toJSON(){return{accessMethod:this.accessMethod,accessLocation:this.accessLocation.toJSON()}}}class wt{constructor(t={}){this.altNames=e(t,"altNames",wt.defaultValues("altNames")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("altNames"===e)return[];throw new Error(`Invalid member name for AltName class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.altNames||"",value:bt.schema()})]})}fromSchema(e){b(e,["altNames"]);const t=We(e,e,wt.schema({names:{altNames:"altNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AltName");"altNames"in t.result&&(this.altNames=Array.from(t.result.altNames,(e=>new bt({schema:e}))))}toSchema(){return new te({value:Array.from(this.altNames,(e=>e.toSchema()))})}toJSON(){return{altNames:Array.from(this.altNames,(e=>e.toJSON()))}}}class kt{constructor(t={}){this.type=e(t,"type",kt.defaultValues("type")),this.value=e(t,"value",kt.defaultValues("value")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"type":return 0;case"value":return new Date(0,0,0);default:throw new Error(`Invalid member name for Time class: ${e}`)}}static schema(t={},r=!1){const s=e(t,"names",{});return new Je({optional:r,value:[new Ue({name:s.utcTimeName||""}),new Ve({name:s.generalTimeName||""})]})}fromSchema(e){b(e,["utcTimeName","generalTimeName"]);const t=We(e,e,kt.schema({names:{utcTimeName:"utcTimeName",generalTimeName:"generalTimeName"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Time");"utcTimeName"in t.result&&(this.type=0,this.value=t.result.utcTimeName.toDate()),"generalTimeName"in t.result&&(this.type=1,this.value=t.result.generalTimeName.toDate())}toSchema(){let e={};return 0===this.type&&(e=new Ue({valueDate:this.value})),1===this.type&&(e=new Ve({valueDate:this.value})),e}toJSON(){return{type:this.type,value:this.value}}}class At{constructor(t={}){this.attributes=e(t,"attributes",At.defaultValues("attributes")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("attributes"===e)return[];throw new Error(`Invalid member name for SubjectDirectoryAttributes class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.attributes||"",value:Ye.schema()})]})}fromSchema(e){b(e,["attributes"]);const t=We(e,e,At.schema({names:{attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for SubjectDirectoryAttributes");this.attributes=Array.from(t.result.attributes,(e=>new Ye({schema:e})))}toSchema(){return new te({value:Array.from(this.attributes,(e=>e.toSchema()))})}toJSON(){return{attributes:Array.from(this.attributes,(e=>e.toJSON()))}}}class Bt{constructor(t={}){"notBefore"in t&&(this.notBefore=e(t,"notBefore",Bt.defaultValues("notBefore"))),"notAfter"in t&&(this.notAfter=e(t,"notAfter",Bt.defaultValues("notAfter"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"notBefore":case"notAfter":return new Date;default:throw new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new G({name:r.notBefore||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new G({name:r.notAfter||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){b(e,["notBefore","notAfter"]);const t=We(e,e,Bt.schema({names:{notBefore:"notBefore",notAfter:"notAfter"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PrivateKeyUsagePeriod");if("notBefore"in t.result){const e=new Ve;e.fromBuffer(t.result.notBefore.valueBlock.valueHex),this.notBefore=e.toDate()}if("notAfter"in t.result){const e=new Ve({valueHex:t.result.notAfter.valueBlock.valueHex});e.fromBuffer(t.result.notAfter.valueBlock.valueHex),this.notAfter=e.toDate()}}toSchema(){const e=[];return"notBefore"in this&&e.push(new G({idBlock:{tagClass:3,tagNumber:0},valueHex:new Ve({valueDate:this.notBefore}).valueBlock.valueHex})),"notAfter"in this&&e.push(new G({idBlock:{tagClass:3,tagNumber:1},valueHex:new Ve({valueDate:this.notAfter}).valueBlock.valueHex})),new te({value:e})}toJSON(){const e={};return"notBefore"in this&&(e.notBefore=this.notBefore),"notAfter"in this&&(e.notAfter=this.notAfter),e}}class St{constructor(t={}){this.cA=e(t,"cA",!1),"pathLenConstraint"in t&&(this.pathLenConstraint=e(t,"pathLenConstraint",0)),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("cA"===e)return!1;throw new Error(`Invalid member name for BasicConstraints class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new ee({optional:!0,name:r.cA||""}),new ce({optional:!0,name:r.pathLenConstraint||""})]})}fromSchema(e){b(e,["cA","pathLenConstraint"]);const t=We(e,e,St.schema({names:{cA:"cA",pathLenConstraint:"pathLenConstraint"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for BasicConstraints");"cA"in t.result&&(this.cA=t.result.cA.valueBlock.value),"pathLenConstraint"in t.result&&(t.result.pathLenConstraint.valueBlock.isHexOnly?this.pathLenConstraint=t.result.pathLenConstraint:this.pathLenConstraint=t.result.pathLenConstraint.valueBlock.valueDec)}toSchema(){const e=[];return this.cA!==St.defaultValues("cA")&&e.push(new ee({value:this.cA})),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof ce?e.push(this.pathLenConstraint):e.push(new ce({value:this.pathLenConstraint}))),new te({value:e})}toJSON(){const e={};return this.cA!==St.defaultValues("cA")&&(e.cA=this.cA),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof ce?e.pathLenConstraint=this.pathLenConstraint.toJSON():e.pathLenConstraint=this.pathLenConstraint),e}}class Ct{constructor(t={}){"distributionPoint"in t&&(this.distributionPoint=e(t,"distributionPoint",Ct.defaultValues("distributionPoint"))),this.onlyContainsUserCerts=e(t,"onlyContainsUserCerts",Ct.defaultValues("onlyContainsUserCerts")),this.onlyContainsCACerts=e(t,"onlyContainsCACerts",Ct.defaultValues("onlyContainsCACerts")),"onlySomeReasons"in t&&(this.onlySomeReasons=e(t,"onlySomeReasons",Ct.defaultValues("onlySomeReasons"))),this.indirectCRL=e(t,"indirectCRL",Ct.defaultValues("indirectCRL")),this.onlyContainsAttributeCerts=e(t,"onlyContainsAttributeCerts",Ct.defaultValues("onlyContainsAttributeCerts")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case"onlyContainsUserCerts":case"onlyContainsCACerts":case"indirectCRL":case"onlyContainsAttributeCerts":return!1;case"onlySomeReasons":return 0;default:throw new Error(`Invalid member name for IssuingDistributionPoint class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Je({value:[new z({name:r.distributionPoint||"",idBlock:{tagClass:3,tagNumber:0},value:[new Fe({name:r.distributionPointNames||"",value:bt.schema()})]}),new z({name:r.distributionPoint||"",idBlock:{tagClass:3,tagNumber:1},value:gt.schema().valueBlock.value})]})]}),new G({name:r.onlyContainsUserCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new G({name:r.onlyContainsCACerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new G({name:r.onlySomeReasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:3}}),new G({name:r.indirectCRL||"",optional:!0,idBlock:{tagClass:3,tagNumber:4}}),new G({name:r.onlyContainsAttributeCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:5}})]})}fromSchema(e){b(e,["distributionPoint","distributionPointNames","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts"]);const t=We(e,e,Ct.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",onlyContainsUserCerts:"onlyContainsUserCerts",onlyContainsCACerts:"onlyContainsCACerts",onlySomeReasons:"onlySomeReasons",indirectCRL:"indirectCRL",onlyContainsAttributeCerts:"onlyContainsAttributeCerts"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for IssuingDistributionPoint");if("distributionPoint"in t.result)switch(!0){case 0===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=Array.from(t.result.distributionPointNames,(e=>new bt({schema:e})));break;case 1===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=new gt({schema:new te({value:t.result.distributionPoint.valueBlock.value})});break;default:throw new Error("Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}")}if("onlyContainsUserCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsUserCerts.valueBlock.valueHex);this.onlyContainsUserCerts=0!==e[0]}if("onlyContainsCACerts"in t.result){const e=new Uint8Array(t.result.onlyContainsCACerts.valueBlock.valueHex);this.onlyContainsCACerts=0!==e[0]}if("onlySomeReasons"in t.result){const e=new Uint8Array(t.result.onlySomeReasons.valueBlock.valueHex);this.onlySomeReasons=e[0]}if("indirectCRL"in t.result){const e=new Uint8Array(t.result.indirectCRL.valueBlock.valueHex);this.indirectCRL=0!==e[0]}if("onlyContainsAttributeCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsAttributeCerts.valueBlock.valueHex);this.onlyContainsAttributeCerts=0!==e[0]}}toSchema(){const e=[];if("distributionPoint"in this){let t;this.distributionPoint instanceof Array?t=new z({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,(e=>e.toSchema()))}):(t=this.distributionPoint.toSchema(),t.idBlock.tagClass=3,t.idBlock.tagNumber=1),e.push(new z({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if(this.onlyContainsUserCerts!==Ct.defaultValues("onlyContainsUserCerts")&&e.push(new G({idBlock:{tagClass:3,tagNumber:1},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsCACerts!==Ct.defaultValues("onlyContainsCACerts")&&e.push(new G({idBlock:{tagClass:3,tagNumber:2},valueHex:new Uint8Array([255]).buffer})),"onlySomeReasons"in this){const t=new ArrayBuffer(1);new Uint8Array(t)[0]=this.onlySomeReasons,e.push(new G({idBlock:{tagClass:3,tagNumber:3},valueHex:t}))}return this.indirectCRL!==Ct.defaultValues("indirectCRL")&&e.push(new G({idBlock:{tagClass:3,tagNumber:4},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsAttributeCerts!==Ct.defaultValues("onlyContainsAttributeCerts")&&e.push(new G({idBlock:{tagClass:3,tagNumber:5},valueHex:new Uint8Array([255]).buffer})),new te({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,(e=>e.toJSON())):e.distributionPoint=this.distributionPoint.toJSON()),this.onlyContainsUserCerts!==Ct.defaultValues("onlyContainsUserCerts")&&(e.onlyContainsUserCerts=this.onlyContainsUserCerts),this.onlyContainsCACerts!==Ct.defaultValues("onlyContainsCACerts")&&(e.onlyContainsCACerts=this.onlyContainsCACerts),"onlySomeReasons"in this&&(e.onlySomeReasons=this.onlySomeReasons),this.indirectCRL!==Ct.defaultValues("indirectCRL")&&(e.indirectCRL=this.indirectCRL),this.onlyContainsAttributeCerts!==Ct.defaultValues("onlyContainsAttributeCerts")&&(e.onlyContainsAttributeCerts=this.onlyContainsAttributeCerts),e}}class Nt{constructor(t={}){this.names=e(t,"names",Nt.defaultValues("names")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("names"===e)return[];throw new Error(`Invalid member name for GeneralNames class: ${e}`)}static schema(t={},r=!1){const s=e(t,"names",{});return new te({optional:r,name:s.blockName||"",value:[new Fe({name:s.generalNames||"",value:bt.schema()})]})}fromSchema(e){b(e,["names","generalNames"]);const t=We(e,e,Nt.schema({names:{blockName:"names",generalNames:"generalNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralNames");this.names=Array.from(t.result.generalNames,(e=>new bt({schema:e})))}toSchema(){return new te({value:Array.from(this.names,(e=>e.toSchema()))})}toJSON(){return{names:Array.from(this.names,(e=>e.toJSON()))}}}class xt{constructor(t={}){this.base=e(t,"base",xt.defaultValues("base")),this.minimum=e(t,"minimum",xt.defaultValues("minimum")),"maximum"in t&&(this.maximum=e(t,"maximum",xt.defaultValues("maximum"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"base":return new bt;case"minimum":case"maximum":return 0;default:throw new Error(`Invalid member name for GeneralSubtree class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[bt.schema(r.base||{}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new ce({name:r.minimum||""})]}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new ce({name:r.maximum||""})]})]})}fromSchema(e){b(e,["base","minimum","maximum"]);const t=We(e,e,xt.schema({names:{base:{names:{blockName:"base"}},minimum:"minimum",maximum:"maximum"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralSubtree");this.base=new bt({schema:t.result.base}),"minimum"in t.result&&(t.result.minimum.valueBlock.isHexOnly?this.minimum=t.result.minimum:this.minimum=t.result.minimum.valueBlock.valueDec),"maximum"in t.result&&(t.result.maximum.valueBlock.isHexOnly?this.maximum=t.result.maximum:this.maximum=t.result.maximum.valueBlock.valueDec)}toSchema(){const e=[];if(e.push(this.base.toSchema()),0!==this.minimum){let t=0;t=this.minimum instanceof ce?this.minimum:new ce({value:this.minimum}),e.push(new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if("maximum"in this){let t=0;t=this.maximum instanceof ce?this.maximum:new ce({value:this.maximum}),e.push(new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[t]}))}return new te({value:e})}toJSON(){const e={base:this.base.toJSON()};return 0!==this.minimum&&("number"==typeof this.minimum?e.minimum=this.minimum:e.minimum=this.minimum.toJSON()),"maximum"in this&&("number"==typeof this.maximum?e.maximum=this.maximum:e.maximum=this.maximum.toJSON()),e}}class Pt{constructor(t={}){"permittedSubtrees"in t&&(this.permittedSubtrees=e(t,"permittedSubtrees",Pt.defaultValues("permittedSubtrees"))),"excludedSubtrees"in t&&(this.excludedSubtrees=e(t,"excludedSubtrees",Pt.defaultValues("excludedSubtrees"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"permittedSubtrees":case"excludedSubtrees":return[];default:throw new Error(`Invalid member name for NameConstraints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Fe({name:r.permittedSubtrees||"",value:xt.schema()})]}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new Fe({name:r.excludedSubtrees||"",value:xt.schema()})]})]})}fromSchema(e){b(e,["permittedSubtrees","excludedSubtrees"]);const t=We(e,e,Pt.schema({names:{permittedSubtrees:"permittedSubtrees",excludedSubtrees:"excludedSubtrees"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for NameConstraints");"permittedSubtrees"in t.result&&(this.permittedSubtrees=Array.from(t.result.permittedSubtrees,(e=>new xt({schema:e})))),"excludedSubtrees"in t.result&&(this.excludedSubtrees=Array.from(t.result.excludedSubtrees,(e=>new xt({schema:e}))))}toSchema(){const e=[];return"permittedSubtrees"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.permittedSubtrees,(e=>e.toSchema()))})),"excludedSubtrees"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.excludedSubtrees,(e=>e.toSchema()))})),new te({value:e})}toJSON(){const e={};return"permittedSubtrees"in this&&(e.permittedSubtrees=Array.from(this.permittedSubtrees,(e=>e.toJSON()))),"excludedSubtrees"in this&&(e.excludedSubtrees=Array.from(this.excludedSubtrees,(e=>e.toJSON()))),e}}class It{constructor(t={}){"distributionPoint"in t&&(this.distributionPoint=e(t,"distributionPoint",It.defaultValues("distributionPoint"))),"reasons"in t&&(this.reasons=e(t,"reasons",It.defaultValues("reasons"))),"cRLIssuer"in t&&(this.cRLIssuer=e(t,"cRLIssuer",It.defaultValues("cRLIssuer"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"distributionPoint":case"cRLIssuer":return[];case"reasons":return new oe;default:throw new Error(`Invalid member name for DistributionPoint class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Je({value:[new z({name:r.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new Fe({name:r.distributionPointNames||"",value:bt.schema()})]}),new z({name:r.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:1},value:gt.schema().valueBlock.value})]})]}),new G({name:r.reasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new z({name:r.cRLIssuer||"",optional:!0,idBlock:{tagClass:3,tagNumber:2},value:[new Fe({name:r.cRLIssuerNames||"",value:bt.schema()})]})]})}fromSchema(e){b(e,["distributionPoint","distributionPointNames","reasons","cRLIssuer","cRLIssuerNames"]);const t=We(e,e,It.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",reasons:"reasons",cRLIssuer:"cRLIssuer",cRLIssuerNames:"cRLIssuerNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for DistributionPoint");"distributionPoint"in t.result&&(0===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=Array.from(t.result.distributionPointNames,(e=>new bt({schema:e})))),1===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=new gt({schema:new te({value:t.result.distributionPoint.valueBlock.value})}))),"reasons"in t.result&&(this.reasons=new oe({valueHex:t.result.reasons.valueBlock.valueHex})),"cRLIssuer"in t.result&&(this.cRLIssuer=Array.from(t.result.cRLIssuerNames,(e=>new bt({schema:e}))))}toSchema(){const e=[];if("distributionPoint"in this){let t;t=this.distributionPoint instanceof Array?new z({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,(e=>e.toSchema()))}):new z({idBlock:{tagClass:3,tagNumber:1},value:[this.distributionPoint.toSchema()]}),e.push(new z({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}return"reasons"in this&&e.push(new G({idBlock:{tagClass:3,tagNumber:1},valueHex:this.reasons.valueBlock.valueHex})),"cRLIssuer"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:2},value:Array.from(this.cRLIssuer,(e=>e.toSchema()))})),new te({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,(e=>e.toJSON())):e.distributionPoint=this.distributionPoint.toJSON()),"reasons"in this&&(e.reasons=this.reasons.toJSON()),"cRLIssuer"in this&&(e.cRLIssuer=Array.from(this.cRLIssuer,(e=>e.toJSON()))),e}}class Et{constructor(t={}){this.distributionPoints=e(t,"distributionPoints",Et.defaultValues("distributionPoints")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("distributionPoints"===e)return[];throw new Error(`Invalid member name for CRLDistributionPoints class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.distributionPoints||"",value:It.schema()})]})}fromSchema(e){b(e,["distributionPoints"]);const t=We(e,e,Et.schema({names:{distributionPoints:"distributionPoints"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CRLDistributionPoints");this.distributionPoints=Array.from(t.result.distributionPoints,(e=>new It({schema:e})))}toSchema(){return new te({value:Array.from(this.distributionPoints,(e=>e.toSchema()))})}toJSON(){return{distributionPoints:Array.from(this.distributionPoints,(e=>e.toJSON()))}}}class Ht{constructor(t={}){this.policyQualifierId=e(t,"policyQualifierId",Ht.defaultValues("policyQualifierId")),this.qualifier=e(t,"qualifier",Ht.defaultValues("qualifier")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"policyQualifierId":return"";case"qualifier":return new Te;default:throw new Error(`Invalid member name for PolicyQualifierInfo class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.policyQualifierId||""}),new Te({name:r.qualifier||""})]})}fromSchema(e){b(e,["policyQualifierId","qualifier"]);const t=We(e,e,Ht.schema({names:{policyQualifierId:"policyQualifierId",qualifier:"qualifier"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyQualifierInfo");this.policyQualifierId=t.result.policyQualifierId.valueBlock.toString(),this.qualifier=t.result.qualifier}toSchema(){return new te({value:[new fe({value:this.policyQualifierId}),this.qualifier]})}toJSON(){return{policyQualifierId:this.policyQualifierId,qualifier:this.qualifier.toJSON()}}}class Lt{constructor(t={}){this.policyIdentifier=e(t,"policyIdentifier",Lt.defaultValues("policyIdentifier")),"policyQualifiers"in t&&(this.policyQualifiers=e(t,"policyQualifiers",Lt.defaultValues("policyQualifiers"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"policyIdentifier":return"";case"policyQualifiers":return[];default:throw new Error(`Invalid member name for PolicyInformation class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.policyIdentifier||""}),new te({optional:!0,value:[new Fe({name:r.policyQualifiers||"",value:Ht.schema()})]})]})}fromSchema(e){b(e,["policyIdentifier","policyQualifiers"]);const t=We(e,e,Lt.schema({names:{policyIdentifier:"policyIdentifier",policyQualifiers:"policyQualifiers"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyInformation");this.policyIdentifier=t.result.policyIdentifier.valueBlock.toString(),"policyQualifiers"in t.result&&(this.policyQualifiers=Array.from(t.result.policyQualifiers,(e=>new Ht({schema:e}))))}toSchema(){const e=[];return e.push(new fe({value:this.policyIdentifier})),"policyQualifiers"in this&&e.push(new te({value:Array.from(this.policyQualifiers,(e=>e.toSchema()))})),new te({value:e})}toJSON(){const e={policyIdentifier:this.policyIdentifier};return"policyQualifiers"in this&&(e.policyQualifiers=Array.from(this.policyQualifiers,(e=>e.toJSON()))),e}}class Ot{constructor(t={}){this.certificatePolicies=e(t,"certificatePolicies",Ot.defaultValues("certificatePolicies")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("certificatePolicies"===e)return[];throw new Error(`Invalid member name for CertificatePolicies class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.certificatePolicies||"",value:Lt.schema()})]})}fromSchema(e){b(e,["certificatePolicies"]);const t=We(e,e,Ot.schema({names:{certificatePolicies:"certificatePolicies"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CertificatePolicies");this.certificatePolicies=Array.from(t.result.certificatePolicies,(e=>new Lt({schema:e})))}toSchema(){return new te({value:Array.from(this.certificatePolicies,(e=>e.toSchema()))})}toJSON(){return{certificatePolicies:Array.from(this.certificatePolicies,(e=>e.toJSON()))}}}class Ut{constructor(t={}){this.issuerDomainPolicy=e(t,"issuerDomainPolicy",Ut.defaultValues("issuerDomainPolicy")),this.subjectDomainPolicy=e(t,"subjectDomainPolicy",Ut.defaultValues("subjectDomainPolicy")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"issuerDomainPolicy":case"subjectDomainPolicy":return"";default:throw new Error(`Invalid member name for PolicyMapping class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.issuerDomainPolicy||""}),new fe({name:r.subjectDomainPolicy||""})]})}fromSchema(e){b(e,["issuerDomainPolicy","subjectDomainPolicy"]);const t=We(e,e,Ut.schema({names:{issuerDomainPolicy:"issuerDomainPolicy",subjectDomainPolicy:"subjectDomainPolicy"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMapping");this.issuerDomainPolicy=t.result.issuerDomainPolicy.valueBlock.toString(),this.subjectDomainPolicy=t.result.subjectDomainPolicy.valueBlock.toString()}toSchema(){return new te({value:[new fe({value:this.issuerDomainPolicy}),new fe({value:this.subjectDomainPolicy})]})}toJSON(){return{issuerDomainPolicy:this.issuerDomainPolicy,subjectDomainPolicy:this.subjectDomainPolicy}}}class Vt{constructor(t={}){this.mappings=e(t,"mappings",Vt.defaultValues("mappings")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("mappings"===e)return[];throw new Error(`Invalid member name for PolicyMappings class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.mappings||"",value:Ut.schema()})]})}fromSchema(e){b(e,["mappings"]);const t=We(e,e,Vt.schema({names:{mappings:"mappings"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMappings");this.mappings=Array.from(t.result.mappings,(e=>new Ut({schema:e})))}toSchema(){return new te({value:Array.from(this.mappings,(e=>e.toSchema()))})}toJSON(){return{mappings:Array.from(this.mappings,(e=>e.toJSON()))}}}class Dt{constructor(t={}){"keyIdentifier"in t&&(this.keyIdentifier=e(t,"keyIdentifier",Dt.defaultValues("keyIdentifier"))),"authorityCertIssuer"in t&&(this.authorityCertIssuer=e(t,"authorityCertIssuer",Dt.defaultValues("authorityCertIssuer"))),"authorityCertSerialNumber"in t&&(this.authorityCertSerialNumber=e(t,"authorityCertSerialNumber",Dt.defaultValues("authorityCertSerialNumber"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"keyIdentifier":return new ae;case"authorityCertIssuer":return[];case"authorityCertSerialNumber":return new ce;default:throw new Error(`Invalid member name for AuthorityKeyIdentifier class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new G({name:r.keyIdentifier||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new Fe({name:r.authorityCertIssuer||"",value:bt.schema()})]}),new G({name:r.authorityCertSerialNumber||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}})]})}fromSchema(e){b(e,["keyIdentifier","authorityCertIssuer","authorityCertSerialNumber"]);const t=We(e,e,Dt.schema({names:{keyIdentifier:"keyIdentifier",authorityCertIssuer:"authorityCertIssuer",authorityCertSerialNumber:"authorityCertSerialNumber"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AuthorityKeyIdentifier");"keyIdentifier"in t.result&&(this.keyIdentifier=new ae({valueHex:t.result.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in t.result&&(this.authorityCertIssuer=Array.from(t.result.authorityCertIssuer,(e=>new bt({schema:e})))),"authorityCertSerialNumber"in t.result&&(this.authorityCertSerialNumber=new ce({valueHex:t.result.authorityCertSerialNumber.valueBlock.valueHex}))}toSchema(){const e=[];return"keyIdentifier"in this&&e.push(new G({idBlock:{tagClass:3,tagNumber:0},valueHex:this.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in this&&e.push(new z({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.authorityCertIssuer,(e=>e.toSchema()))})),"authorityCertSerialNumber"in this&&e.push(new G({idBlock:{tagClass:3,tagNumber:2},valueHex:this.authorityCertSerialNumber.valueBlock.valueHex})),new te({value:e})}toJSON(){const e={};return"keyIdentifier"in this&&(e.keyIdentifier=this.keyIdentifier.toJSON()),"authorityCertIssuer"in this&&(e.authorityCertIssuer=Array.from(this.authorityCertIssuer,(e=>e.toJSON()))),"authorityCertSerialNumber"in this&&(e.authorityCertSerialNumber=this.authorityCertSerialNumber.toJSON()),e}}class jt{constructor(t={}){"requireExplicitPolicy"in t&&(this.requireExplicitPolicy=e(t,"requireExplicitPolicy",jt.defaultValues("requireExplicitPolicy"))),"inhibitPolicyMapping"in t&&(this.inhibitPolicyMapping=e(t,"inhibitPolicyMapping",jt.defaultValues("inhibitPolicyMapping"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"requireExplicitPolicy":case"inhibitPolicyMapping":return 0;default:throw new Error(`Invalid member name for PolicyConstraints class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new G({name:r.requireExplicitPolicy||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new G({name:r.inhibitPolicyMapping||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){b(e,["requireExplicitPolicy","inhibitPolicyMapping"]);const t=We(e,e,jt.schema({names:{requireExplicitPolicy:"requireExplicitPolicy",inhibitPolicyMapping:"inhibitPolicyMapping"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyConstraints");if("requireExplicitPolicy"in t.result){const e=t.result.requireExplicitPolicy;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=qe(e.toBER(!1));this.requireExplicitPolicy=r.result.valueBlock.valueDec}if("inhibitPolicyMapping"in t.result){const e=t.result.inhibitPolicyMapping;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=qe(e.toBER(!1));this.inhibitPolicyMapping=r.result.valueBlock.valueDec}}toSchema(){const e=[];if("requireExplicitPolicy"in this){const t=new ce({value:this.requireExplicitPolicy});t.idBlock.tagClass=3,t.idBlock.tagNumber=0,e.push(t)}if("inhibitPolicyMapping"in this){const t=new ce({value:this.inhibitPolicyMapping});t.idBlock.tagClass=3,t.idBlock.tagNumber=1,e.push(t)}return new te({value:e})}toJSON(){const e={};return"requireExplicitPolicy"in this&&(e.requireExplicitPolicy=this.requireExplicitPolicy),"inhibitPolicyMapping"in this&&(e.inhibitPolicyMapping=this.inhibitPolicyMapping),e}}class Rt{constructor(t={}){this.keyPurposes=e(t,"keyPurposes",Rt.defaultValues("keyPurposes")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("keyPurposes"===e)return[];throw new Error(`Invalid member name for ExtKeyUsage class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.keyPurposes||"",value:new fe})]})}fromSchema(e){b(e,["keyPurposes"]);const t=We(e,e,Rt.schema({names:{keyPurposes:"keyPurposes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ExtKeyUsage");this.keyPurposes=Array.from(t.result.keyPurposes,(e=>e.valueBlock.toString()))}toSchema(){return new te({value:Array.from(this.keyPurposes,(e=>new fe({value:e})))})}toJSON(){return{keyPurposes:Array.from(this.keyPurposes)}}}class Kt{constructor(t={}){this.accessDescriptions=e(t,"accessDescriptions",Kt.defaultValues("accessDescriptions")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("accessDescriptions"===e)return[];throw new Error(`Invalid member name for InfoAccess class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.accessDescriptions||"",value:vt.schema()})]})}fromSchema(e){b(e,["accessDescriptions"]);const t=We(e,e,Kt.schema({names:{accessDescriptions:"accessDescriptions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for InfoAccess");this.accessDescriptions=Array.from(t.result.accessDescriptions,(e=>new vt({schema:e})))}toSchema(){return new te({value:Array.from(this.accessDescriptions,(e=>e.toSchema()))})}toJSON(){return{accessDescriptions:Array.from(this.accessDescriptions,(e=>e.toJSON()))}}}class _t{constructor(e={}){if("view"in e)this.fromUint8Array(e.view);else if("buffer"in e)this.fromArrayBuffer(e.buffer);else if("string"in e)this.fromString(e.string);else if("hexstring"in e)this.fromHexString(e.hexstring);else if("length"in e&&e.length>0){if(this.length=e.length,e.stub)for(let t=0;t<this._view.length;t++)this._view[t]=e.stub}else this.length=0}set buffer(e){this._buffer=e,this._view=new Uint8Array(this._buffer)}get buffer(){return this._buffer}set view(e){this._buffer=new ArrayBuffer(e.length),this._view=new Uint8Array(this._buffer),this._view.set(e)}get view(){return this._view}get length(){return this.view.byteLength}set length(e){this._buffer=new ArrayBuffer(e),this._view=new Uint8Array(this._buffer)}clear(){this._buffer=new ArrayBuffer(0),this._view=new Uint8Array(this._buffer)}fromArrayBuffer(e){this._buffer=e,this._view=new Uint8Array(this._buffer)}fromUint8Array(e){this.fromArrayBuffer(new Uint8Array(e).buffer)}fromString(e){const t=e.length;this.length=t;for(let r=0;r<t;r++)this.view[r]=e.charCodeAt(r)}toString(e=0,t=this.view.length-e){let r="";(e>=this.view.length||e<0)&&(e=0),(t>=this.view.length||t<0)&&(t=this.view.length-e);for(let s=e;s<e+t;s++)r+=String.fromCharCode(this.view[s]);return r}fromHexString(e){const t=e.length;this.buffer=new ArrayBuffer(t>>1),this.view=new Uint8Array(this.buffer);const r=new Map;r.set("0",0),r.set("1",1),r.set("2",2),r.set("3",3),r.set("4",4),r.set("5",5),r.set("6",6),r.set("7",7),r.set("8",8),r.set("9",9),r.set("A",10),r.set("a",10),r.set("B",11),r.set("b",11),r.set("C",12),r.set("c",12),r.set("D",13),r.set("d",13),r.set("E",14),r.set("e",14),r.set("F",15),r.set("f",15);let s=0,i=0;for(let a=0;a<t;a++)a%2?(i|=r.get(e.charAt(a)),this.view[s]=i,s++):i=r.get(e.charAt(a))<<4}toHexString(e=0,t=this.view.length-e){let r="";(e>=this.view.length||e<0)&&(e=0),(t>=this.view.length||t<0)&&(t=this.view.length-e);for(let s=e;s<e+t;s++){const e=this.view[s].toString(16).toUpperCase();r=r+(1==e.length?"0":"")+e}return r}copy(e=0,t=this.length-e){if(!e&&!this.length)return new _t;if(e<0||e>this.length-1)throw new Error(`Wrong start position: ${e}`);return new _t({buffer:this._buffer.slice(e,e+t)})}slice(e=0,t=this.length){if(!e&&!this.length)return new _t;if(e<0||e>this.length-1)throw new Error(`Wrong start position: ${e}`);return new _t({buffer:this._buffer.slice(e,t)})}realloc(e){const t=new ArrayBuffer(e),r=new Uint8Array(t);e>this._view.length?r.set(this._view):r.set(new Uint8Array(this._buffer,0,e)),this._buffer=t,this._view=new Uint8Array(this._buffer)}append(e){const t=this.length,r=e.length,s=e._view.subarray();this.realloc(t+r),this._view.set(s,t)}insert(e,t=0,r=this.length-t){return!(t>this.length-1)&&(r>this.length-t&&(r=this.length-t),r>e.length&&(r=e.length),r==e.length?this._view.set(e._view,t):this._view.set(e._view.subarray(0,r),t),!0)}isEqual(e){if(this.length!=e.length)return!1;for(let t=0;t<e.length;t++)if(this.view[t]!=e.view[t])return!1;return!0}isEqualView(e){if(e.length!=this.view.length)return!1;for(let t=0;t<e.length;t++)if(this.view[t]!=e[t])return!1;return!0}findPattern(e,t,r,s){const{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s),o=e.length;if(o>a)return-1;const l=[];for(let t=0;t<o;t++)l.push(e.view[t]);for(let e=0;e<=a-o;e++){let t=!0;const r=n?i-o-e:i+e;for(let e=0;e<o;e++)if(this.view[e+r]!=l[e]){t=!1;break}if(t)return n?i-o-e:i+o+e}return-1}findFirstIn(e,t,r,s){const{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s),o={id:-1,position:n?0:i+a,length:0};for(let t=0;t<e.length;t++){const r=this.findPattern(e[t],i,a,n);if(-1!=r){let s=!1;const i=e[t].length;n?r-i>=o.position-o.length&&(s=!0):r-i<=o.position-o.length&&(s=!0),s&&(o.position=r,o.id=t,o.length=i)}}return o}findAllIn(e,t,r){let{start:s,length:i}=this.prepareFindParameters(t,r);const a=[];let n={id:-1,position:s};for(;;){const t=n.position;if(n=this.findFirstIn(e,n.position,i),-1==n.id)break;i-=n.position-t,a.push({id:n.id,position:n.position})}return a}findAllPatternIn(e,t,r){const{start:s,length:i}=this.prepareFindParameters(t,r),a=[],n=e.length;if(n>i)return-1;const o=Array.from(e.view);for(let e=0;e<=i-n;e++){let t=!0;const r=s+e;for(let e=0;e<n;e++)if(this.view[e+r]!=o[e]){t=!1;break}t&&(a.push(s+n+e),e+=n-1)}return a}findFirstNotIn(e,t,r,s){let{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s);const o={left:{id:-1,position:i},right:{id:-1,position:0},value:new _t};let l=a;for(;l>0;){if(o.right=this.findFirstIn(e,n?i-a+l:i+a-l,l,n),-1==o.right.id){a=l,n?i-=a:i=o.left.position,o.value=new _t({buffer:this._buffer.slice(i,i+a)});break}if(o.right.position!=(n?o.left.position-e[o.right.id].length:o.left.position+e[o.right.id].length)){n?(i=o.right.position+e[o.right.id].length,a=o.left.position-o.right.position-e[o.right.id].length):(i=o.left.position,a=o.right.position-o.left.position-e[o.right.id].length),o.value=new _t({buffer:this._buffer.slice(i,i+a)});break}o.left=o.right,l-=e[o.right.id].length}if(n){const e=o.right;o.right=o.left,o.left=e}return o}findAllNotIn(e,t,r){let{start:s,length:i}=this.prepareFindParameters(t,r);const a=[];let n={left:{id:-1,position:s},right:{id:-1,position:s},value:new _t};do{const t=n.right.position;n=this.findFirstNotIn(e,n.right.position,i),i-=n.right.position-t,a.push({left:{id:n.left.id,position:n.left.position},right:{id:n.right.id,position:n.right.position},value:n.value})}while(-1!=n.right.id);return a}findFirstSequence(e,t,r,s){let{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s);const o=this.skipNotPatterns(e,i,a,n);if(-1==o)return{position:-1,value:new _t};const l=this.skipPatterns(e,o,a-(n?i-o:o-i),n);n?(i=l,a=o-l):(i=o,a=l-o);return{position:l,value:new _t({buffer:this._buffer.slice(i,i+a)})}}findAllSequences(e,t,r){let{start:s,length:i}=this.prepareFindParameters(t,r);const a=[];let n={position:s,value:new _t};do{const t=n.position;n=this.findFirstSequence(e,n.position,i),-1!=n.position&&(i-=n.position-t,a.push({position:n.position,value:n.value}))}while(-1!=n.position);return a}findPairedPatterns(e,t,r,s){const i=[];if(e.isEqual(t))return i;const{start:a,length:n}=this.prepareFindParameters(r,s);let o=0;const l=this.findAllPatternIn(e,a,n);if(!Array.isArray(l)||0==l.length)return i;const c=this.findAllPatternIn(t,a,n);if(!Array.isArray(c)||0==c.length)return i;for(;o<l.length&&0!=c.length;)if(l[0]!=c[0]){if(l[o]>c[0])break;for(;l[o]<c[0]&&(o++,!(o>=l.length)););i.push({left:l[o-1],right:c[0]}),l.splice(o-1,1),c.splice(0,1),o=0}else i.push({left:l[0],right:c[0]}),l.splice(0,1),c.splice(0,1);return i.sort(((e,t)=>e.left-t.left)),i}findPairedArrays(e,t,r,s){const{start:i,length:a}=this.prepareFindParameters(r,s),n=[];let o=0;const l=this.findAllIn(e,i,a);if(0==l.length)return n;const c=this.findAllIn(t,i,a);if(0==c.length)return n;for(;o<l.length&&0!=c.length;)if(l[0].position!=c[0].position){if(l[o].position>c[0].position)break;for(;l[o].position<c[0].position&&(o++,!(o>=l.length)););n.push({left:l[o-1],right:c[0]}),l.splice(o-1,1),c.splice(0,1),o=0}else n.push({left:l[0],right:c[0]}),l.splice(0,1),c.splice(0,1);return n.sort(((e,t)=>e.left.position-t.left.position)),n}replacePattern(e,t,r,s,i=null){let a,n=[];const o={status:-1,searchPatternPositions:[],replacePatternPositions:[]},{start:l,length:c}=this.prepareFindParameters(r,s);if(null==i){if(n=this.findAllIn([e],l,c),0==n.length)return o}else n=i;o.searchPatternPositions.push(...Array.from(n,(e=>e.position)));const h=e.length-t.length,u=new ArrayBuffer(this.view.length-n.length*h),m=new Uint8Array(u);for(m.set(new Uint8Array(this.buffer,0,l)),a=0;a<n.length;a++){const r=0==a?l:n[a-1].position;m.set(new Uint8Array(this.buffer,r,n[a].position-e.length-r),r-a*h),m.set(t.view,n[a].position-e.length-a*h),o.replacePatternPositions.push(n[a].position-e.length-a*h)}return a--,m.set(new Uint8Array(this.buffer,n[a].position,this.length-n[a].position),n[a].position-e.length+t.length-a*h),this.buffer=u,this.view=new Uint8Array(this.buffer),o.status=1,o}skipPatterns(e,t,r,s){const{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s);let o=i;for(let t=0;t<e.length;t++){const r=e[t].length,s=n?o-r:o;let l=!0;for(let i=0;i<r;i++)if(this.view[i+s]!=e[t].view[i]){l=!1;break}if(l)if(t=-1,n){if(o-=r,o<=0)return o}else if(o+=r,o>=i+a)return o}return o}skipNotPatterns(e,t,r,s){const{start:i,length:a,backward:n}=this.prepareFindParameters(t,r,s);let o=-1;for(let t=0;t<a;t++){for(let r=0;r<e.length;r++){const s=e[r].length,a=n?i-t-s:i+t;let l=!0;for(let t=0;t<s;t++)if(this.view[t+a]!=e[r].view[t]){l=!1;break}if(l){o=n?i-t:i+t;break}}if(-1!=o)break}return o}prepareFindParameters(e=null,t=null,r=!1){return null===e&&(e=r?this.length:0),e>this.length&&(e=this.length),r?(null===t&&(t=e),t>e&&(t=e)):(null===t&&(t=this.length-e),t>this.length-e&&(t=this.length-e)),{start:e,length:t,backward:r}}}class Jt{constructor(e={}){this._stream=new _t,this._length=0,this._start=0,this.backward=!1,this.appendBlock=0,this.prevLength=0,this.prevStart=0,this.stream="view"in e?new _t({view:e.view}):"buffer"in e?new _t({buffer:e.buffer}):"string"in e?new _t({string:e.string}):"hexstring"in e?new _t({hexstring:e.hexstring}):"stream"in e?e.stream.slice():new _t,"backward"in e&&e.backward&&(this.backward=e.backward,this._start=this.stream.length),"length"in e&&e.length>0&&(this._length=e.length),"start"in e&&e.start&&e.start>0&&(this._start=e.start),"appendBlock"in e&&e.appendBlock&&e.appendBlock>0&&(this.appendBlock=e.appendBlock)}set stream(e){this._stream=e,this.prevLength=this._length,this._length=e.length,this.prevStart=this._start,this._start=0}get stream(){return this._stream}set length(e){this.prevLength=this._length,this._length=e}get length(){return this.appendBlock?this.start:this._length}set start(e){e>this.stream.length||(this.prevStart=this._start,this.prevLength=this._length,this._length-=this.backward?this._start-e:e-this._start,this._start=e)}get start(){return this._start}get buffer(){return this._stream.buffer.slice(0,this._length)}resetPosition(){this._start=this.prevStart,this._length=this.prevLength}findPattern(e,t=null){(null==t||t>this.length)&&(t=this.length);const r=this.stream.findPattern(e,this.start,this.length,this.backward);if(-1==r)return r;if(this.backward){if(r<this.start-e.length-t)return-1}else if(r>this.start+e.length+t)return-1;return this.start=r,r}findFirstIn(e,t=null){(null==t||t>this.length)&&(t=this.length);const r=this.stream.findFirstIn(e,this.start,this.length,this.backward);if(-1==r.id)return r;if(this.backward){if(r.position<this.start-e[r.id].length-t)return{id:-1,position:this.backward?0:this.start+this.length}}else if(r.position>this.start+e[r.id].length+t)return{id:-1,position:this.backward?0:this.start+this.length};return this.start=r.position,r}findAllIn(e){const t=this.backward?this.start-this.length:this.start;return this.stream.findAllIn(e,t,this.length)}findFirstNotIn(e,t=null){(null==t||t>this._length)&&(t=this._length);const r=this._stream.findFirstNotIn(e,this._start,this._length,this.backward);if(-1==r.left.id&&-1==r.right.id)return r;if(this.backward){if(-1!=r.right.id&&r.right.position<this._start-e[r.right.id].length-t)return{left:{id:-1,position:this._start},right:{id:-1,position:0},value:new _t}}else if(-1!=r.left.id&&r.left.position>this._start+e[r.left.id].length+t)return{left:{id:-1,position:this._start},right:{id:-1,position:0},value:new _t};return this.backward?-1==r.left.id?this.start=0:this.start=r.left.position:-1==r.right.id?this.start=this._start+this._length:this.start=r.right.position,r}findAllNotIn(e){const t=this.backward?this._start-this._length:this._start;return this._stream.findAllNotIn(e,t,this._length)}findFirstSequence(e,t=null,r=null){(null==t||t>this._length)&&(t=this._length),(null==r||r>t)&&(r=t);const s=this._stream.findFirstSequence(e,this._start,t,this.backward);if(0==s.value.length)return s;if(this.backward){if(s.position<this._start-s.value.length-r)return{position:-1,value:new _t}}else if(s.position>this._start+s.value.length+r)return{position:-1,value:new _t};return this.start=s.position,s}findAllSequences(e){const t=this.backward?this.start-this.length:this.start;return this.stream.findAllSequences(e,t,this.length)}findPairedPatterns(e,t,r=null){(null==r||r>this.length)&&(r=this.length);const s=this.backward?this.start-this.length:this.start,i=this.stream.findPairedPatterns(e,t,s,this.length);if(i.length)if(this.backward){if(i[0].right<this.start-t.length-r)return[]}else if(i[0].left>this.start+e.length+r)return[];return i}findPairedArrays(e,t,r=null){(null==r||r>this.length)&&(r=this.length);const s=this.backward?this.start-this.length:this.start,i=this.stream.findPairedArrays(e,t,s,this.length);if(i.length)if(this.backward){if(i[0].right.position<this.start-t[i[0].right.id].length-r)return[]}else if(i[0].left.position>this.start+e[i[0].left.id].length+r)return[];return i}replacePattern(e,t){const r=this.backward?this.start-this.length:this.start;return this.stream.replacePattern(e,t,r,this.length)}skipPatterns(e){const t=this.stream.skipPatterns(e,this.start,this.length,this.backward);return this.start=t,t}skipNotPatterns(e){const t=this.stream.skipNotPatterns(e,this.start,this.length,this.backward);return-1==t?-1:(this.start=t,t)}append(e){this.beforeAppend(e.length),this._stream.view.set(e.view,this._start),this._length+=2*e.length,this.start=this._start+e.length,this.prevLength-=2*e.length}appendView(e){this.beforeAppend(e.length),this._stream.view.set(e,this._start),this._length+=2*e.length,this.start=this._start+e.length,this.prevLength-=2*e.length}appendChar(e){this.beforeAppend(1),this._stream.view[this._start]=e,this._length+=2,this.start=this._start+1,this.prevLength-=2}appendUint16(e){this.beforeAppend(2);const t=new Uint16Array([e]),r=new Uint8Array(t.buffer);this.stream.view[this._start]=r[1],this._stream.view[this._start+1]=r[0],this._length+=4,this.start=this._start+2,this.prevLength-=4}appendUint24(e){this.beforeAppend(3);const t=new Uint32Array([e]),r=new Uint8Array(t.buffer);this._stream.view[this._start]=r[2],this._stream.view[this._start+1]=r[1],this._stream.view[this._start+2]=r[0],this._length+=6,this.start=this._start+3,this.prevLength-=6}appendUint32(e){this.beforeAppend(4);const t=new Uint32Array([e]),r=new Uint8Array(t.buffer);this._stream.view[this._start]=r[3],this._stream.view[this._start+1]=r[2],this._stream.view[this._start+2]=r[1],this._stream.view[this._start+3]=r[0],this._length+=8,this.start=this._start+4,this.prevLength-=8}appendInt16(e){this.beforeAppend(2);const t=new Int16Array([e]),r=new Uint8Array(t.buffer);this._stream.view[this._start]=r[1],this._stream.view[this._start+1]=r[0],this._length+=4,this.start=this._start+2,this.prevLength-=4}appendInt32(e){this.beforeAppend(4);const t=new Int32Array([e]),r=new Uint8Array(t.buffer);this._stream.view[this._start]=r[3],this._stream.view[this._start+1]=r[2],this._stream.view[this._start+2]=r[1],this._stream.view[this._start+3]=r[0],this._length+=8,this.start=this._start+4,this.prevLength-=8}getBlock(e,t=!0){if(this._length<=0)return new Uint8Array(0);let r;if(this._length<e&&(e=this._length),this.backward){const t=this._stream.view.subarray(this._length-e,this._length);r=new Uint8Array(e);for(let s=0;s<e;s++)r[e-1-s]=t[s]}else r=this._stream.view.subarray(this._start,this._start+e);return t&&(this.start+=this.backward?-1*e:e),r}getUint16(e=!0){const t=this.getBlock(2,e);if(t.length<2)return 0;const r=new Uint16Array(1),s=new Uint8Array(r.buffer);return s[0]=t[1],s[1]=t[0],r[0]}getInt16(e=!0){const t=this.getBlock(2,e);if(t.length<2)return 0;const r=new Int16Array(1),s=new Uint8Array(r.buffer);return s[0]=t[1],s[1]=t[0],r[0]}getUint24(e=!0){const t=this.getBlock(3,e);if(t.length<3)return 0;const r=new Uint32Array(1),s=new Uint8Array(r.buffer);for(let e=3;e>=1;e--)s[3-e]=t[e-1];return r[0]}getUint32(e=!0){const t=this.getBlock(4,e);if(t.length<4)return 0;const r=new Uint32Array(1),s=new Uint8Array(r.buffer);for(let e=3;e>=0;e--)s[3-e]=t[e];return r[0]}getInt32(e=!0){const t=this.getBlock(4,e);if(t.length<4)return 0;const r=new Int32Array(1),s=new Uint8Array(r.buffer);for(let e=3;e>=0;e--)s[3-e]=t[e];return r[0]}beforeAppend(e){this._start+e>this._stream.length&&(e>this.appendBlock&&(this.appendBlock=e+Jt.APPEND_BLOCK),this._stream.realloc(this._stream.length+this.appendBlock))}}Jt.APPEND_BLOCK=1e3;class Tt{constructor(t={}){this.version=e(t,"version",Tt.defaultValues("version")),this.logID=e(t,"logID",Tt.defaultValues("logID")),this.timestamp=e(t,"timestamp",Tt.defaultValues("timestamp")),this.extensions=e(t,"extensions",Tt.defaultValues("extensions")),this.hashAlgorithm=e(t,"hashAlgorithm",Tt.defaultValues("hashAlgorithm")),this.signatureAlgorithm=e(t,"signatureAlgorithm",Tt.defaultValues("signatureAlgorithm")),this.signature=e(t,"signature",Tt.defaultValues("signature")),"schema"in t&&this.fromSchema(t.schema),"stream"in t&&this.fromStream(t.stream)}static defaultValues(e){switch(e){case"version":return 0;case"logID":case"extensions":return new ArrayBuffer(0);case"timestamp":return new Date(0);case"hashAlgorithm":case"signatureAlgorithm":return"";case"signature":return new Te;default:throw new Error(`Invalid member name for SignedCertificateTimestamp class: ${e}`)}}fromSchema(e){if(e instanceof $e==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestamp");const t=new Jt({stream:new _t({buffer:e.data})});this.fromStream(t)}fromStream(e){const t=e.getUint16();if(this.version=e.getBlock(1)[0],0===this.version){this.logID=new Uint8Array(e.getBlock(32)).buffer.slice(0),this.timestamp=new Date(s(new Uint8Array(e.getBlock(8)),8));const r=e.getUint16();switch(this.extensions=new Uint8Array(e.getBlock(r)).buffer.slice(0),e.getBlock(1)[0]){case 0:this.hashAlgorithm="none";break;case 1:this.hashAlgorithm="md5";break;case 2:this.hashAlgorithm="sha1";break;case 3:this.hashAlgorithm="sha224";break;case 4:this.hashAlgorithm="sha256";break;case 5:this.hashAlgorithm="sha384";break;case 6:this.hashAlgorithm="sha512";break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}switch(e.getBlock(1)[0]){case 0:this.signatureAlgorithm="anonymous";break;case 1:this.signatureAlgorithm="rsa";break;case 2:this.signatureAlgorithm="dsa";break;case 3:this.signatureAlgorithm="ecdsa";break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}const i=e.getUint16(),a=qe(new Uint8Array(e.getBlock(i)).buffer.slice(0));if(-1===a.offset)throw new Error("Object's stream was not correct for SignedCertificateTimestamp");if(this.signature=a.result,t!==47+r+i)throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}}toSchema(){const e=this.toStream();return new $e({data:e.stream.buffer})}toStream(){const e=new Jt;e.appendUint16(47+this.extensions.byteLength+this.signature.valueBeforeDecode.byteLength),e.appendChar(this.version),e.appendView(new Uint8Array(this.logID));const t=new ArrayBuffer(8),r=new Uint8Array(t),s=i(this.timestamp.valueOf(),8);let a,n;switch(r.set(new Uint8Array(s),8-s.byteLength),e.appendView(r),e.appendUint16(this.extensions.byteLength),this.extensions.byteLength&&e.appendView(new Uint8Array(this.extensions)),this.hashAlgorithm.toLowerCase()){case"none":a=0;break;case"md5":a=1;break;case"sha1":a=2;break;case"sha224":a=3;break;case"sha256":a=4;break;case"sha384":a=5;break;case"sha512":a=6;break;default:throw new Error(`Incorrect data for hashAlgorithm: ${this.hashAlgorithm}`)}switch(e.appendChar(a),this.signatureAlgorithm.toLowerCase()){case"anonymous":n=0;break;case"rsa":n=1;break;case"dsa":n=2;break;case"ecdsa":n=3;break;default:throw new Error(`Incorrect data for signatureAlgorithm: ${this.signatureAlgorithm}`)}e.appendChar(n);const o=this.signature.toBER(!1);return e.appendUint16(o.byteLength),e.appendView(new Uint8Array(o)),e}toJSON(){return{version:this.version,logID:t(this.logID),timestamp:this.timestamp,extensions:t(this.extensions),hashAlgorithm:this.hashAlgorithm,signatureAlgorithm:this.signatureAlgorithm,signature:this.signature.toJSON()}}async verify(e,t,r=0){let s,a=m(g(this.logID)),n=null,o=new Jt;for(const t of e)if(t.log_id===a){n=t.key;break}if(null===n)throw new Error(`Public key not found for CT with logId: ${a}`);const l=qe(d(f(n)));if(-1===l.offset)throw new Error(`Incorrect key value for CT Log with logId: ${a}`);s=new Ze({schema:l.result}),o.appendChar(0),o.appendChar(0);const c=new ArrayBuffer(8),h=new Uint8Array(c),u=i(this.timestamp.valueOf(),8);return h.set(new Uint8Array(u),8-u.byteLength),o.appendView(h),o.appendUint16(r),0===r&&o.appendUint24(t.byteLength),o.appendView(new Uint8Array(t)),o.appendUint16(this.extensions.byteLength),0!==this.extensions.byteLength&&o.appendView(new Uint8Array(this.extensions)),ht().subtle.verifyWithPublicKey(o._stream._buffer.slice(0,o._length),{valueBlock:{valueHex:this.signature.toBER(!1)}},s,{algorithmId:""},"SHA-256")}}class Ft{constructor(t={}){this.timestamps=e(t,"timestamps",Ft.defaultValues("timestamps")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("timestamps"===e)return[];throw new Error(`Invalid member name for SignedCertificateTimestampList class: ${e}`)}static compareWithDefault(e,t){if("timestamps"===e)return 0===t.length;throw new Error(`Invalid member name for SignedCertificateTimestampList class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return"optional"in r==!1&&(r.optional=!1),new ae({name:r.blockName||"SignedCertificateTimestampList",optional:r.optional})}fromSchema(e){if(e instanceof ae==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");const t=new Jt({stream:new _t({buffer:e.valueBlock.valueHex})});if(t.getUint16()!==t.length)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");for(;t.length;)this.timestamps.push(new Tt({stream:t}))}toSchema(){const e=new Jt;let t=0;const r=[];for(const e of this.timestamps){const s=e.toStream();r.push(s),t+=s.stream.buffer.byteLength}e.appendUint16(t);for(const t of r)e.appendView(t.stream.view);return new ae({valueHex:e.stream.buffer.slice(0)})}toJSON(){return{timestamps:Array.from(this.timestamps,(e=>e.toJSON()))}}}class $t{constructor(t={}){this.templateID=e(t,"templateID",$t.defaultValues("templateID")),"templateMajorVersion"in t&&(this.templateMajorVersion=e(t,"templateMajorVersion",$t.defaultValues("templateMajorVersion"))),"templateMinorVersion"in t&&(this.templateMinorVersion=e(t,"templateMinorVersion",$t.defaultValues("templateMinorVersion"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"templateID":return"";case"templateMajorVersion":case"templateMinorVersion":return 0;default:throw new Error(`Invalid member name for CertificateTemplate class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.templateID||""}),new ce({name:r.templateMajorVersion||"",optional:!0}),new ce({name:r.templateMinorVersion||"",optional:!0})]})}fromSchema(e){b(e,["templateID","templateMajorVersion","templateMinorVersion"]);let t=We(e,e,$t.schema({names:{templateID:"templateID",templateMajorVersion:"templateMajorVersion",templateMinorVersion:"templateMinorVersion"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CertificateTemplate");this.templateID=t.result.templateID.valueBlock.toString(),"templateMajorVersion"in t.result&&(this.templateMajorVersion=t.result.templateMajorVersion.valueBlock.valueDec),"templateMinorVersion"in t.result&&(this.templateMinorVersion=t.result.templateMinorVersion.valueBlock.valueDec)}toSchema(){const e=[];return e.push(new fe({value:this.templateID})),"templateMajorVersion"in this&&e.push(new ce({value:this.templateMajorVersion})),"templateMinorVersion"in this&&e.push(new ce({value:this.templateMinorVersion})),new te({value:e})}toJSON(){const e={extnID:this.templateID};return"templateMajorVersion"in this&&(e.templateMajorVersion=this.templateMajorVersion),"templateMinorVersion"in this&&(e.templateMinorVersion=this.templateMinorVersion),e}}class Mt{constructor(t={}){this.certificateIndex=e(t,"certificateIndex",Mt.defaultValues("certificateIndex")),this.keyIndex=e(t,"keyIndex",Mt.defaultValues("keyIndex")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"certificateIndex":case"keyIndex":return 0;default:throw new Error(`Invalid member name for CAVersion class: ${e}`)}}static schema(e={}){return new ce}fromSchema(e){if(e.constructor.blockName()!==ce.blockName())throw new Error("Object's schema was not verified against input data for CAVersion");let t=e.valueBlock.valueHex.slice(0);const r=new Uint8Array(t);switch(!0){case t.byteLength<4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(r,4-t.byteLength),t=e.slice(0)}break;case t.byteLength>4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(r.slice(0,4)),t=e.slice(0)}}const s=t.slice(0,2),i=new Uint8Array(s);let a=i[0];i[0]=i[1],i[1]=a;const n=new Uint16Array(s);this.keyIndex=n[0];const o=t.slice(2),l=new Uint8Array(o);a=l[0],l[0]=l[1],l[1]=a;const c=new Uint16Array(o);this.certificateIndex=c[0]}toSchema(){const e=new ArrayBuffer(2);new Uint16Array(e)[0]=this.certificateIndex;const t=new Uint8Array(e);let r=t[0];t[0]=t[1],t[1]=r;const s=new ArrayBuffer(2);new Uint16Array(s)[0]=this.keyIndex;const i=new Uint8Array(s);return r=i[0],i[0]=i[1],i[1]=r,new ce({valueHex:a(s,e)})}toJSON(){return{certificateIndex:this.certificateIndex,keyIndex:this.keyIndex}}}class qt{constructor(t={}){this.id=e(t,"id",qt.defaultValues("id")),"type"in t&&(this.type=e(t,"type",qt.defaultValues("type"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"id":return"";case"type":return new se;default:throw new Error(`Invalid member name for QCStatement class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"id":return""===t;case"type":return t instanceof se;default:throw new Error(`Invalid member name for QCStatement class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.id||""}),new Te({name:r.type||"",optional:!0})]})}fromSchema(e){b(e,["id","type"]);const t=We(e,e,qt.schema({names:{id:"id",type:"type"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for QCStatement");this.id=t.result.id.valueBlock.toString(),"type"in t.result&&(this.type=t.result.type)}toSchema(){const e=[new fe({value:this.id})];return"type"in this&&e.push(this.type),new te({value:e})}toJSON(){const e={id:this.id};return"type"in this&&(e.type=this.type.toJSON()),e}}class Wt{constructor(t={}){this.values=e(t,"values",Wt.defaultValues("values")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("values"===e)return[];throw new Error(`Invalid member name for QCStatements class: ${e}`)}static compareWithDefault(e,t){if("values"===e)return 0===t.length;throw new Error(`Invalid member name for QCStatements class: ${e}`)}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new Fe({name:r.values||"",value:qt.schema(r.value||{})})]})}fromSchema(e){b(e,["values"]);const t=We(e,e,Wt.schema({names:{values:"values"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for QCStatements");this.values=Array.from(t.result.values,(e=>new qt({schema:e})))}toSchema(){return new te({value:Array.from(this.values,(e=>e.toSchema()))})}toJSON(){return{extensions:Array.from(this.values,(e=>e.toJSON()))}}}class Gt{constructor(t={}){this.extnID=e(t,"extnID",Gt.defaultValues("extnID")),this.critical=e(t,"critical",Gt.defaultValues("critical")),this.extnValue="extnValue"in t?new ae({valueHex:t.extnValue}):Gt.defaultValues("extnValue"),"parsedValue"in t&&(this.parsedValue=e(t,"parsedValue",Gt.defaultValues("parsedValue"))),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"extnID":return"";case"critical":return!1;case"extnValue":return new ae;case"parsedValue":return{};default:throw new Error(`Invalid member name for Extension class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[new fe({name:r.extnID||""}),new ee({name:r.critical||"",optional:!0}),new ae({name:r.extnValue||""})]})}fromSchema(e){b(e,["extnID","critical","extnValue"]);let t=We(e,e,Gt.schema({names:{extnID:"extnID",critical:"critical",extnValue:"extnValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Extension");if(this.extnID=t.result.extnID.valueBlock.toString(),"critical"in t.result&&(this.critical=t.result.critical.valueBlock.value),this.extnValue=t.result.extnValue,t=qe(this.extnValue.valueBlock.valueHex),-1!==t.offset)switch(this.extnID){case"2.5.29.9":try{this.parsedValue=new At({schema:t.result})}catch(e){this.parsedValue=new At,this.parsedValue.parsingError="Incorrectly formated SubjectDirectoryAttributes"}break;case"2.5.29.14":case"2.5.29.15":case"2.5.29.20":case"2.5.29.27":case"2.5.29.21":case"2.5.29.24":case"2.5.29.54":case"1.3.6.1.4.1.311.20.2":case"1.3.6.1.4.1.311.21.2":this.parsedValue=t.result;break;case"2.5.29.16":try{this.parsedValue=new Bt({schema:t.result})}catch(e){this.parsedValue=new Bt,this.parsedValue.parsingError="Incorrectly formated PrivateKeyUsagePeriod"}break;case"2.5.29.17":case"2.5.29.18":try{this.parsedValue=new wt({schema:t.result})}catch(e){this.parsedValue=new wt,this.parsedValue.parsingError="Incorrectly formated AltName"}break;case"2.5.29.19":try{this.parsedValue=new St({schema:t.result})}catch(e){this.parsedValue=new St,this.parsedValue.parsingError="Incorrectly formated BasicConstraints"}break;case"2.5.29.28":try{this.parsedValue=new Ct({schema:t.result})}catch(e){this.parsedValue=new Ct,this.parsedValue.parsingError="Incorrectly formated IssuingDistributionPoint"}break;case"2.5.29.29":try{this.parsedValue=new Nt({schema:t.result})}catch(e){this.parsedValue=new Nt,this.parsedValue.parsingError="Incorrectly formated GeneralNames"}break;case"2.5.29.30":try{this.parsedValue=new Pt({schema:t.result})}catch(e){this.parsedValue=new Pt,this.parsedValue.parsingError="Incorrectly formated NameConstraints"}break;case"2.5.29.31":case"2.5.29.46":try{this.parsedValue=new Et({schema:t.result})}catch(e){this.parsedValue=new Et,this.parsedValue.parsingError="Incorrectly formated CRLDistributionPoints"}break;case"2.5.29.32":case"1.3.6.1.4.1.311.21.10":try{this.parsedValue=new Ot({schema:t.result})}catch(e){this.parsedValue=new Ot,this.parsedValue.parsingError="Incorrectly formated CertificatePolicies"}break;case"2.5.29.33":try{this.parsedValue=new Vt({schema:t.result})}catch(e){this.parsedValue=new Vt,this.parsedValue.parsingError="Incorrectly formated CertificatePolicies"}break;case"2.5.29.35":try{this.parsedValue=new Dt({schema:t.result})}catch(e){this.parsedValue=new Dt,this.parsedValue.parsingError="Incorrectly formated AuthorityKeyIdentifier"}break;case"2.5.29.36":try{this.parsedValue=new jt({schema:t.result})}catch(e){this.parsedValue=new jt,this.parsedValue.parsingError="Incorrectly formated PolicyConstraints"}break;case"2.5.29.37":try{this.parsedValue=new Rt({schema:t.result})}catch(e){this.parsedValue=new Rt,this.parsedValue.parsingError="Incorrectly formated ExtKeyUsage"}break;case"1.3.6.1.5.5.7.1.1":case"1.3.6.1.5.5.7.1.11":try{this.parsedValue=new Kt({schema:t.result})}catch(e){this.parsedValue=new Kt,this.parsedValue.parsingError="Incorrectly formated InfoAccess"}break;case"1.3.6.1.4.1.11129.2.4.2":try{this.parsedValue=new Ft({schema:t.result})}catch(e){this.parsedValue=new Ft,this.parsedValue.parsingError="Incorrectly formated SignedCertificateTimestampList"}break;case"1.3.6.1.4.1.311.21.7":try{this.parsedValue=new $t({schema:t.result})}catch(e){this.parsedValue=new $t,this.parsedValue.parsingError="Incorrectly formated CertificateTemplate"}break;case"1.3.6.1.4.1.311.21.1":try{this.parsedValue=new Mt({schema:t.result})}catch(e){this.parsedValue=new Mt,this.parsedValue.parsingError="Incorrectly formated CAVersion"}break;case"1.3.6.1.5.5.7.1.3":try{this.parsedValue=new Wt({schema:t.result})}catch(e){this.parsedValue=new Wt,this.parsedValue.parsingError="Incorrectly formated QCStatements"}}}toSchema(){const e=[];return e.push(new fe({value:this.extnID})),this.critical!==Gt.defaultValues("critical")&&e.push(new ee({value:this.critical})),e.push(this.extnValue),new te({value:e})}toJSON(){const e={extnID:this.extnID,extnValue:this.extnValue.toJSON()};return this.critical!==Gt.defaultValues("critical")&&(e.critical=this.critical),"parsedValue"in this&&"toJSON"in this.parsedValue&&(e.parsedValue=this.parsedValue.toJSON()),e}}class Qt{constructor(t={}){this.extensions=e(t,"extensions",Qt.defaultValues("extensions")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){if("extensions"===e)return[];throw new Error(`Invalid member name for Extensions class: ${e}`)}static schema(t={},r=!1){const s=e(t,"names",{});return new te({optional:r,name:s.blockName||"",value:[new Fe({name:s.extensions||"",value:Gt.schema(s.extension||{})})]})}fromSchema(e){b(e,["extensions"]);const t=We(e,e,Qt.schema({names:{extensions:"extensions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Extensions");this.extensions=Array.from(t.result.extensions,(e=>new Gt({schema:e})))}toSchema(){return new te({value:Array.from(this.extensions,(e=>e.toSchema()))})}toJSON(){return{extensions:Array.from(this.extensions,(e=>e.toJSON()))}}}function zt(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"tbsCertificate",value:[new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new ce({name:r.tbsCertificateVersion||"tbsCertificate.version"})]}),new ce({name:r.tbsCertificateSerialNumber||"tbsCertificate.serialNumber"}),Ge.schema(r.signature||{names:{blockName:"tbsCertificate.signature"}}),gt.schema(r.issuer||{names:{blockName:"tbsCertificate.issuer"}}),new te({name:r.tbsCertificateValidity||"tbsCertificate.validity",value:[kt.schema(r.notBefore||{names:{utcTimeName:"tbsCertificate.notBefore",generalTimeName:"tbsCertificate.notBefore"}}),kt.schema(r.notAfter||{names:{utcTimeName:"tbsCertificate.notAfter",generalTimeName:"tbsCertificate.notAfter"}})]}),gt.schema(r.subject||{names:{blockName:"tbsCertificate.subject"}}),Ze.schema(r.subjectPublicKeyInfo||{names:{blockName:"tbsCertificate.subjectPublicKeyInfo"}}),new G({name:r.tbsCertificateIssuerUniqueID||"tbsCertificate.issuerUniqueID",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new G({name:r.tbsCertificateSubjectUniqueID||"tbsCertificate.subjectUniqueID",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new z({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[Qt.schema(r.extensions||{names:{blockName:"tbsCertificate.extensions"}})]})]})}class Zt{constructor(t={}){this.tbs=e(t,"tbs",Zt.defaultValues("tbs")),this.version=e(t,"version",Zt.defaultValues("version")),this.serialNumber=e(t,"serialNumber",Zt.defaultValues("serialNumber")),this.signature=e(t,"signature",Zt.defaultValues("signature")),this.issuer=e(t,"issuer",Zt.defaultValues("issuer")),this.notBefore=e(t,"notBefore",Zt.defaultValues("notBefore")),this.notAfter=e(t,"notAfter",Zt.defaultValues("notAfter")),this.subject=e(t,"subject",Zt.defaultValues("subject")),this.subjectPublicKeyInfo=e(t,"subjectPublicKeyInfo",Zt.defaultValues("subjectPublicKeyInfo")),"issuerUniqueID"in t&&(this.issuerUniqueID=e(t,"issuerUniqueID",Zt.defaultValues("issuerUniqueID"))),"subjectUniqueID"in t&&(this.subjectUniqueID=e(t,"subjectUniqueID",Zt.defaultValues("subjectUniqueID"))),"extensions"in t&&(this.extensions=e(t,"extensions",Zt.defaultValues("extensions"))),this.signatureAlgorithm=e(t,"signatureAlgorithm",Zt.defaultValues("signatureAlgorithm")),this.signatureValue=e(t,"signatureValue",Zt.defaultValues("signatureValue")),"schema"in t&&this.fromSchema(t.schema)}static defaultValues(e){switch(e){case"tbs":case"issuerUniqueID":case"subjectUniqueID":return new ArrayBuffer(0);case"version":return 0;case"serialNumber":return new ce;case"signature":case"signatureAlgorithm":return new Ge;case"issuer":case"subject":return new gt;case"notBefore":case"notAfter":return new kt;case"subjectPublicKeyInfo":return new Ze;case"extensions":return[];case"signatureValue":return new oe;default:throw new Error(`Invalid member name for Certificate class: ${e}`)}}static schema(t={}){const r=e(t,"names",{});return new te({name:r.blockName||"",value:[zt(r.tbsCertificate),Ge.schema(r.signatureAlgorithm||{names:{blockName:"signatureAlgorithm"}}),new oe({name:r.signatureValue||"signatureValue"})]})}fromSchema(e){b(e,["tbsCertificate","tbsCertificate.extensions","tbsCertificate.version","tbsCertificate.serialNumber","tbsCertificate.signature","tbsCertificate.issuer","tbsCertificate.notBefore","tbsCertificate.notAfter","tbsCertificate.subject","tbsCertificate.subjectPublicKeyInfo","tbsCertificate.issuerUniqueID","tbsCertificate.subjectUniqueID","signatureAlgorithm","signatureValue"]);const t=We(e,e,Zt.schema({names:{tbsCertificate:{names:{extensions:{names:{extensions:"tbsCertificate.extensions"}}}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for Certificate");this.tbs=t.result.tbsCertificate.valueBeforeDecode,"tbsCertificate.version"in t.result&&(this.version=t.result["tbsCertificate.version"].valueBlock.valueDec),this.serialNumber=t.result["tbsCertificate.serialNumber"],this.signature=new Ge({schema:t.result["tbsCertificate.signature"]}),this.issuer=new gt({schema:t.result["tbsCertificate.issuer"]}),this.notBefore=new kt({schema:t.result["tbsCertificate.notBefore"]}),this.notAfter=new kt({schema:t.result["tbsCertificate.notAfter"]}),this.subject=new gt({schema:t.result["tbsCertificate.subject"]}),this.subjectPublicKeyInfo=new Ze({schema:t.result["tbsCertificate.subjectPublicKeyInfo"]}),"tbsCertificate.issuerUniqueID"in t.result&&(this.issuerUniqueID=t.result["tbsCertificate.issuerUniqueID"].valueBlock.valueHex),"tbsCertificate.subjectUniqueID"in t.result&&(this.subjectUniqueID=t.result["tbsCertificate.subjectUniqueID"].valueBlock.valueHex),"tbsCertificate.extensions"in t.result&&(this.extensions=Array.from(t.result["tbsCertificate.extensions"],(e=>new Gt({schema:e})))),this.signatureAlgorithm=new Ge({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[];return"version"in this&&this.version!==Zt.defaultValues("version")&&e.push(new z({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new ce({value:this.version})]})),e.push(this.serialNumber),e.push(this.signature.toSchema()),e.push(this.issuer.toSchema()),e.push(new te({value:[this.notBefore.toSchema(),this.notAfter.toSchema()]})),e.push(this.subject.toSchema()),e.push(this.subjectPublicKeyInfo.toSchema()),"issuerUniqueID"in this&&e.push(new G({optional:!0,idBlock:{tagClass:3,tagNumber:1},valueHex:this.issuerUniqueID})),"subjectUniqueID"in this&&e.push(new G({optional:!0,idBlock:{tagClass:3,tagNumber:2},valueHex:this.subjectUniqueID})),"extensions"in this&&e.push(new z({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[new te({value:Array.from(this.extensions,(e=>e.toSchema()))})]})),new te({value:e})}toSchema(e=!1){let t={};if(!1===e){if(0===this.tbs.length)return Zt.schema().value[0];t=qe(this.tbs).result}else t=this.encodeTBS();return new te({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:t(this.tbs,0,this.tbs.byteLength),serialNumber:this.serialNumber.toJSON(),signature:this.signature.toJSON(),issuer:this.issuer.toJSON(),notBefore:this.notBefore.toJSON(),notAfter:this.notAfter.toJSON(),subject:this.subject.toJSON(),subjectPublicKeyInfo:this.subjectPublicKeyInfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return"version"in this&&this.version!==Zt.defaultValues("version")&&(e.version=this.version),"issuerUniqueID"in this&&(e.issuerUniqueID=t(this.issuerUniqueID,0,this.issuerUniqueID.byteLength)),"subjectUniqueID"in this&&(e.subjectUniqueID=t(this.subjectUniqueID,0,this.subjectUniqueID.byteLength)),"extensions"in this&&(e.extensions=Array.from(this.extensions,(e=>e.toJSON()))),e}getPublicKey(e=null){return ht().subtle.getPublicKey(this.subjectPublicKeyInfo,this.signatureAlgorithm,e)}getKeyHash(e="SHA-1"){const t=ut();return void 0===t?Promise.reject("Unable to create WebCrypto object"):t.digest({name:e},new Uint8Array(this.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHex))}sign(e,t="SHA-1"){if(void 0===e)return Promise.reject("Need to provide a private key for signing");let r,s=Promise.resolve();const i=ht();return s=s.then((()=>i.subtle.getSignatureParameters(e,t))),s=s.then((e=>{r=e.parameters,this.signature=e.signatureAlgorithm,this.signatureAlgorithm=e.signatureAlgorithm})),s=s.then((()=>{this.tbs=this.encodeTBS().toBER(!1)})),s=s.then((()=>i.subtle.signWithPrivateKey(this.tbs,e,r))),s=s.then((e=>{this.signatureValue=new oe({valueHex:e})})),s}verify(e=null){let t={};return null!==e?t=e.subjectPublicKeyInfo:this.issuer.isEqual(this.subject)&&(t=this.subjectPublicKeyInfo),t instanceof Ze==!1?Promise.reject("Please provide issuer certificate as a parameter"):ht().subtle.verifyWithPublicKey(this.tbs,this.signatureValue,t,this.signatureAlgorithm)}}const Yt={fromBER:qe},Xt={Certificate:Zt,ECPublicKey:Qe,RSAPublicKey:ze};export{Yt as asn1js,Xt as pkijs};
